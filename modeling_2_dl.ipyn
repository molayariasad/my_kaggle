{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>.container { width:95% !important; }</style>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-latest.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "from scipy.stats import kurtosis, mode\n",
    "import pandas_profiling\n",
    "from IPython.core.display import display, HTML\n",
    "display(HTML(\"<style>.container { width:95% !important; }</style>\"))\n",
    "\n",
    "import _plotly_future_\n",
    "from _plotly_future_ import v4_subplots\n",
    "\n",
    "from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot\n",
    "import plotly.graph_objs as go\n",
    "import plotly.plotly as py\n",
    "import seaborn as sns\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "from datetime import datetime\n",
    "import random\n",
    "init_notebook_mode(connected=True)\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "import yaml\n",
    "#import boto3\n",
    "from io import BytesIO\n",
    "import datetime\n",
    "from datetime import timedelta, datetime, date\n",
    "\n",
    "hour = timedelta(hours=1)\n",
    "day = timedelta(days=1)\n",
    "%matplotlib inline\n",
    "\n",
    "\n",
    "from itertools import cycle\n",
    "pd.set_option('max_columns', 50)\n",
    "plt.style.use('bmh')\n",
    "color_pal = plt.rcParams['axes.prop_cycle'].by_key()['color']\n",
    "color_cycle = cycle(plt.rcParams['axes.prop_cycle'].by_key()['color'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "path_sell_price= '/Users/asadmolayari/Desktop/my_courses/Kaggle/M5/m5-forecasting-accuracy/sell_prices.csv'\n",
    "path_trin_val= '/Users/asadmolayari/Desktop/my_courses/Kaggle/M5/m5-forecasting-accuracy/sales_train_validation.csv'\n",
    "path_cld= '/Users/asadmolayari/Desktop/my_courses/Kaggle/M5/m5-forecasting-accuracy/calendar.csv'\n",
    "path_sbmssion='/Users/asadmolayari/Desktop/my_courses/Kaggle/M5/m5-forecasting-accuracy/sample_submission.csv'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>item_id</th>\n",
       "      <th>dept_id</th>\n",
       "      <th>cat_id</th>\n",
       "      <th>store_id</th>\n",
       "      <th>state_id</th>\n",
       "      <th>d_1</th>\n",
       "      <th>d_2</th>\n",
       "      <th>d_3</th>\n",
       "      <th>d_4</th>\n",
       "      <th>d_5</th>\n",
       "      <th>d_6</th>\n",
       "      <th>d_7</th>\n",
       "      <th>d_8</th>\n",
       "      <th>d_9</th>\n",
       "      <th>d_10</th>\n",
       "      <th>d_11</th>\n",
       "      <th>d_12</th>\n",
       "      <th>d_13</th>\n",
       "      <th>d_14</th>\n",
       "      <th>d_15</th>\n",
       "      <th>d_16</th>\n",
       "      <th>d_17</th>\n",
       "      <th>d_18</th>\n",
       "      <th>d_19</th>\n",
       "      <th>...</th>\n",
       "      <th>d_1889</th>\n",
       "      <th>d_1890</th>\n",
       "      <th>d_1891</th>\n",
       "      <th>d_1892</th>\n",
       "      <th>d_1893</th>\n",
       "      <th>d_1894</th>\n",
       "      <th>d_1895</th>\n",
       "      <th>d_1896</th>\n",
       "      <th>d_1897</th>\n",
       "      <th>d_1898</th>\n",
       "      <th>d_1899</th>\n",
       "      <th>d_1900</th>\n",
       "      <th>d_1901</th>\n",
       "      <th>d_1902</th>\n",
       "      <th>d_1903</th>\n",
       "      <th>d_1904</th>\n",
       "      <th>d_1905</th>\n",
       "      <th>d_1906</th>\n",
       "      <th>d_1907</th>\n",
       "      <th>d_1908</th>\n",
       "      <th>d_1909</th>\n",
       "      <th>d_1910</th>\n",
       "      <th>d_1911</th>\n",
       "      <th>d_1912</th>\n",
       "      <th>d_1913</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HOBBIES_1_001_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_001</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HOBBIES_1_002_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_002</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HOBBIES_1_003_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_003</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HOBBIES_1_004_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_004</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HOBBIES_1_005_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_005</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>HOBBIES_1_006_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_006</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>HOBBIES_1_007_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_007</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>HOBBIES_1_008_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_008</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>12</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>38</td>\n",
       "      <td>22</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>26</td>\n",
       "      <td>8</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>HOBBIES_1_009_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_009</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>HOBBIES_1_010_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_010</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>HOBBIES_1_011_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_011</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>HOBBIES_1_012_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_012</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>HOBBIES_1_013_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_013</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>HOBBIES_1_014_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_014</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>HOBBIES_1_015_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_015</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>HOBBIES_1_016_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_016</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>15</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>HOBBIES_1_017_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_017</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>HOBBIES_1_018_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_018</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>HOBBIES_1_019_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_019</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>24</td>\n",
       "      <td>6</td>\n",
       "      <td>25</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>16</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>24</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>31</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>HOBBIES_1_020_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_020</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>HOBBIES_1_021_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_021</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>HOBBIES_1_022_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_022</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>HOBBIES_1_023_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_023</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>HOBBIES_1_024_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_024</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>HOBBIES_1_025_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_025</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>HOBBIES_1_026_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_026</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>HOBBIES_1_027_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_027</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>HOBBIES_1_028_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_028</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>HOBBIES_1_029_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_029</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>HOBBIES_1_030_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_030</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>4</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30460</th>\n",
       "      <td>FOODS_3_798_WI_3_validation</td>\n",
       "      <td>FOODS_3_798</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30461</th>\n",
       "      <td>FOODS_3_799_WI_3_validation</td>\n",
       "      <td>FOODS_3_799</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30462</th>\n",
       "      <td>FOODS_3_800_WI_3_validation</td>\n",
       "      <td>FOODS_3_800</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>36</td>\n",
       "      <td>39</td>\n",
       "      <td>34</td>\n",
       "      <td>42</td>\n",
       "      <td>29</td>\n",
       "      <td>42</td>\n",
       "      <td>29</td>\n",
       "      <td>36</td>\n",
       "      <td>55</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>21</td>\n",
       "      <td>32</td>\n",
       "      <td>47</td>\n",
       "      <td>31</td>\n",
       "      <td>23</td>\n",
       "      <td>49</td>\n",
       "      <td>58</td>\n",
       "      <td>50</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "      <td>11</td>\n",
       "      <td>15</td>\n",
       "      <td>5</td>\n",
       "      <td>15</td>\n",
       "      <td>14</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30463</th>\n",
       "      <td>FOODS_3_801_WI_3_validation</td>\n",
       "      <td>FOODS_3_801</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30464</th>\n",
       "      <td>FOODS_3_802_WI_3_validation</td>\n",
       "      <td>FOODS_3_802</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30465</th>\n",
       "      <td>FOODS_3_803_WI_3_validation</td>\n",
       "      <td>FOODS_3_803</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30466</th>\n",
       "      <td>FOODS_3_804_WI_3_validation</td>\n",
       "      <td>FOODS_3_804</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>14</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>13</td>\n",
       "      <td>24</td>\n",
       "      <td>12</td>\n",
       "      <td>13</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30467</th>\n",
       "      <td>FOODS_3_805_WI_3_validation</td>\n",
       "      <td>FOODS_3_805</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30468</th>\n",
       "      <td>FOODS_3_806_WI_3_validation</td>\n",
       "      <td>FOODS_3_806</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30469</th>\n",
       "      <td>FOODS_3_807_WI_3_validation</td>\n",
       "      <td>FOODS_3_807</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>13</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30470</th>\n",
       "      <td>FOODS_3_808_WI_3_validation</td>\n",
       "      <td>FOODS_3_808</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>15</td>\n",
       "      <td>21</td>\n",
       "      <td>17</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30471</th>\n",
       "      <td>FOODS_3_809_WI_3_validation</td>\n",
       "      <td>FOODS_3_809</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30472</th>\n",
       "      <td>FOODS_3_810_WI_3_validation</td>\n",
       "      <td>FOODS_3_810</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30473</th>\n",
       "      <td>FOODS_3_811_WI_3_validation</td>\n",
       "      <td>FOODS_3_811</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>32</td>\n",
       "      <td>35</td>\n",
       "      <td>14</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "      <td>8</td>\n",
       "      <td>23</td>\n",
       "      <td>35</td>\n",
       "      <td>36</td>\n",
       "      <td>20</td>\n",
       "      <td>24</td>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>22</td>\n",
       "      <td>27</td>\n",
       "      <td>29</td>\n",
       "      <td>24</td>\n",
       "      <td>10</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30474</th>\n",
       "      <td>FOODS_3_812_WI_3_validation</td>\n",
       "      <td>FOODS_3_812</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30475</th>\n",
       "      <td>FOODS_3_813_WI_3_validation</td>\n",
       "      <td>FOODS_3_813</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30476</th>\n",
       "      <td>FOODS_3_814_WI_3_validation</td>\n",
       "      <td>FOODS_3_814</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30477</th>\n",
       "      <td>FOODS_3_815_WI_3_validation</td>\n",
       "      <td>FOODS_3_815</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30478</th>\n",
       "      <td>FOODS_3_816_WI_3_validation</td>\n",
       "      <td>FOODS_3_816</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30479</th>\n",
       "      <td>FOODS_3_817_WI_3_validation</td>\n",
       "      <td>FOODS_3_817</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30480</th>\n",
       "      <td>FOODS_3_818_WI_3_validation</td>\n",
       "      <td>FOODS_3_818</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30481</th>\n",
       "      <td>FOODS_3_819_WI_3_validation</td>\n",
       "      <td>FOODS_3_819</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>14</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>13</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>12</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30482</th>\n",
       "      <td>FOODS_3_820_WI_3_validation</td>\n",
       "      <td>FOODS_3_820</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30483</th>\n",
       "      <td>FOODS_3_821_WI_3_validation</td>\n",
       "      <td>FOODS_3_821</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30484</th>\n",
       "      <td>FOODS_3_822_WI_3_validation</td>\n",
       "      <td>FOODS_3_822</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30485</th>\n",
       "      <td>FOODS_3_823_WI_3_validation</td>\n",
       "      <td>FOODS_3_823</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30486</th>\n",
       "      <td>FOODS_3_824_WI_3_validation</td>\n",
       "      <td>FOODS_3_824</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30487</th>\n",
       "      <td>FOODS_3_825_WI_3_validation</td>\n",
       "      <td>FOODS_3_825</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>20</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30488</th>\n",
       "      <td>FOODS_3_826_WI_3_validation</td>\n",
       "      <td>FOODS_3_826</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30489</th>\n",
       "      <td>FOODS_3_827_WI_3_validation</td>\n",
       "      <td>FOODS_3_827</td>\n",
       "      <td>FOODS_3</td>\n",
       "      <td>FOODS</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>30490 rows × 1919 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  id        item_id    dept_id   cat_id  \\\n",
       "0      HOBBIES_1_001_CA_1_validation  HOBBIES_1_001  HOBBIES_1  HOBBIES   \n",
       "1      HOBBIES_1_002_CA_1_validation  HOBBIES_1_002  HOBBIES_1  HOBBIES   \n",
       "2      HOBBIES_1_003_CA_1_validation  HOBBIES_1_003  HOBBIES_1  HOBBIES   \n",
       "3      HOBBIES_1_004_CA_1_validation  HOBBIES_1_004  HOBBIES_1  HOBBIES   \n",
       "4      HOBBIES_1_005_CA_1_validation  HOBBIES_1_005  HOBBIES_1  HOBBIES   \n",
       "5      HOBBIES_1_006_CA_1_validation  HOBBIES_1_006  HOBBIES_1  HOBBIES   \n",
       "6      HOBBIES_1_007_CA_1_validation  HOBBIES_1_007  HOBBIES_1  HOBBIES   \n",
       "7      HOBBIES_1_008_CA_1_validation  HOBBIES_1_008  HOBBIES_1  HOBBIES   \n",
       "8      HOBBIES_1_009_CA_1_validation  HOBBIES_1_009  HOBBIES_1  HOBBIES   \n",
       "9      HOBBIES_1_010_CA_1_validation  HOBBIES_1_010  HOBBIES_1  HOBBIES   \n",
       "10     HOBBIES_1_011_CA_1_validation  HOBBIES_1_011  HOBBIES_1  HOBBIES   \n",
       "11     HOBBIES_1_012_CA_1_validation  HOBBIES_1_012  HOBBIES_1  HOBBIES   \n",
       "12     HOBBIES_1_013_CA_1_validation  HOBBIES_1_013  HOBBIES_1  HOBBIES   \n",
       "13     HOBBIES_1_014_CA_1_validation  HOBBIES_1_014  HOBBIES_1  HOBBIES   \n",
       "14     HOBBIES_1_015_CA_1_validation  HOBBIES_1_015  HOBBIES_1  HOBBIES   \n",
       "15     HOBBIES_1_016_CA_1_validation  HOBBIES_1_016  HOBBIES_1  HOBBIES   \n",
       "16     HOBBIES_1_017_CA_1_validation  HOBBIES_1_017  HOBBIES_1  HOBBIES   \n",
       "17     HOBBIES_1_018_CA_1_validation  HOBBIES_1_018  HOBBIES_1  HOBBIES   \n",
       "18     HOBBIES_1_019_CA_1_validation  HOBBIES_1_019  HOBBIES_1  HOBBIES   \n",
       "19     HOBBIES_1_020_CA_1_validation  HOBBIES_1_020  HOBBIES_1  HOBBIES   \n",
       "20     HOBBIES_1_021_CA_1_validation  HOBBIES_1_021  HOBBIES_1  HOBBIES   \n",
       "21     HOBBIES_1_022_CA_1_validation  HOBBIES_1_022  HOBBIES_1  HOBBIES   \n",
       "22     HOBBIES_1_023_CA_1_validation  HOBBIES_1_023  HOBBIES_1  HOBBIES   \n",
       "23     HOBBIES_1_024_CA_1_validation  HOBBIES_1_024  HOBBIES_1  HOBBIES   \n",
       "24     HOBBIES_1_025_CA_1_validation  HOBBIES_1_025  HOBBIES_1  HOBBIES   \n",
       "25     HOBBIES_1_026_CA_1_validation  HOBBIES_1_026  HOBBIES_1  HOBBIES   \n",
       "26     HOBBIES_1_027_CA_1_validation  HOBBIES_1_027  HOBBIES_1  HOBBIES   \n",
       "27     HOBBIES_1_028_CA_1_validation  HOBBIES_1_028  HOBBIES_1  HOBBIES   \n",
       "28     HOBBIES_1_029_CA_1_validation  HOBBIES_1_029  HOBBIES_1  HOBBIES   \n",
       "29     HOBBIES_1_030_CA_1_validation  HOBBIES_1_030  HOBBIES_1  HOBBIES   \n",
       "...                              ...            ...        ...      ...   \n",
       "30460    FOODS_3_798_WI_3_validation    FOODS_3_798    FOODS_3    FOODS   \n",
       "30461    FOODS_3_799_WI_3_validation    FOODS_3_799    FOODS_3    FOODS   \n",
       "30462    FOODS_3_800_WI_3_validation    FOODS_3_800    FOODS_3    FOODS   \n",
       "30463    FOODS_3_801_WI_3_validation    FOODS_3_801    FOODS_3    FOODS   \n",
       "30464    FOODS_3_802_WI_3_validation    FOODS_3_802    FOODS_3    FOODS   \n",
       "30465    FOODS_3_803_WI_3_validation    FOODS_3_803    FOODS_3    FOODS   \n",
       "30466    FOODS_3_804_WI_3_validation    FOODS_3_804    FOODS_3    FOODS   \n",
       "30467    FOODS_3_805_WI_3_validation    FOODS_3_805    FOODS_3    FOODS   \n",
       "30468    FOODS_3_806_WI_3_validation    FOODS_3_806    FOODS_3    FOODS   \n",
       "30469    FOODS_3_807_WI_3_validation    FOODS_3_807    FOODS_3    FOODS   \n",
       "30470    FOODS_3_808_WI_3_validation    FOODS_3_808    FOODS_3    FOODS   \n",
       "30471    FOODS_3_809_WI_3_validation    FOODS_3_809    FOODS_3    FOODS   \n",
       "30472    FOODS_3_810_WI_3_validation    FOODS_3_810    FOODS_3    FOODS   \n",
       "30473    FOODS_3_811_WI_3_validation    FOODS_3_811    FOODS_3    FOODS   \n",
       "30474    FOODS_3_812_WI_3_validation    FOODS_3_812    FOODS_3    FOODS   \n",
       "30475    FOODS_3_813_WI_3_validation    FOODS_3_813    FOODS_3    FOODS   \n",
       "30476    FOODS_3_814_WI_3_validation    FOODS_3_814    FOODS_3    FOODS   \n",
       "30477    FOODS_3_815_WI_3_validation    FOODS_3_815    FOODS_3    FOODS   \n",
       "30478    FOODS_3_816_WI_3_validation    FOODS_3_816    FOODS_3    FOODS   \n",
       "30479    FOODS_3_817_WI_3_validation    FOODS_3_817    FOODS_3    FOODS   \n",
       "30480    FOODS_3_818_WI_3_validation    FOODS_3_818    FOODS_3    FOODS   \n",
       "30481    FOODS_3_819_WI_3_validation    FOODS_3_819    FOODS_3    FOODS   \n",
       "30482    FOODS_3_820_WI_3_validation    FOODS_3_820    FOODS_3    FOODS   \n",
       "30483    FOODS_3_821_WI_3_validation    FOODS_3_821    FOODS_3    FOODS   \n",
       "30484    FOODS_3_822_WI_3_validation    FOODS_3_822    FOODS_3    FOODS   \n",
       "30485    FOODS_3_823_WI_3_validation    FOODS_3_823    FOODS_3    FOODS   \n",
       "30486    FOODS_3_824_WI_3_validation    FOODS_3_824    FOODS_3    FOODS   \n",
       "30487    FOODS_3_825_WI_3_validation    FOODS_3_825    FOODS_3    FOODS   \n",
       "30488    FOODS_3_826_WI_3_validation    FOODS_3_826    FOODS_3    FOODS   \n",
       "30489    FOODS_3_827_WI_3_validation    FOODS_3_827    FOODS_3    FOODS   \n",
       "\n",
       "      store_id state_id  d_1  d_2  d_3  d_4  d_5  d_6  d_7  d_8  d_9  d_10  \\\n",
       "0         CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "1         CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "2         CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "3         CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "4         CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "5         CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "6         CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "7         CA_1       CA   12   15    0    0    0    4    6    5    7     0   \n",
       "8         CA_1       CA    2    0    7    3    0    2    3    9    0     0   \n",
       "9         CA_1       CA    0    0    1    0    0    0    0    0    0     0   \n",
       "10        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "11        CA_1       CA    0    2    0    0    0    0    0    2    0     0   \n",
       "12        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "13        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "14        CA_1       CA    4    0    0    5    0    0    0    0    0     0   \n",
       "15        CA_1       CA    5    1    3    0   15   32    1    5    2     7   \n",
       "16        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "17        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "18        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "19        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "20        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "21        CA_1       CA    2    1    1    1    0    0    1    1    0     1   \n",
       "22        CA_1       CA    2    1    0    0    2    1    3    7    2     0   \n",
       "23        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "24        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "25        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "26        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "27        CA_1       CA    0    0    0    0    1    2    1    0    1     0   \n",
       "28        CA_1       CA    2    0    3    0    0    2    2    0    0     0   \n",
       "29        CA_1       CA    0    0    0    0    0    0    0    0    0     0   \n",
       "...        ...      ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   ...   \n",
       "30460     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30461     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30462     WI_3       WI   36   39   34   42   29   42   29   36   55    11   \n",
       "30463     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30464     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30465     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30466     WI_3       WI   14    7    6    9    0   14    6   12    9     7   \n",
       "30467     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30468     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30469     WI_3       WI    7    6    9    1    6   11    8   10   11     6   \n",
       "30470     WI_3       WI    4   13    5    1    5    0    2    4    6     7   \n",
       "30471     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30472     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30473     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30474     WI_3       WI    0    4    0    1    0    2    0    2    0     0   \n",
       "30475     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30476     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30477     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30478     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30479     WI_3       WI    0    1    0    1    0    1    3    1    0     1   \n",
       "30480     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30481     WI_3       WI   14   11    5    6    5   13   18   13   18    19   \n",
       "30482     WI_3       WI    1    1    1    1    1    2    1    3    4     1   \n",
       "30483     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30484     WI_3       WI    4    4    2    5    2    7    8    4    4     1   \n",
       "30485     WI_3       WI    0    0    2    2    0    3    1    4    1     0   \n",
       "30486     WI_3       WI    0    0    0    0    0    5    0    1    1     3   \n",
       "30487     WI_3       WI    0    6    0    2    2    4    1    8    5     2   \n",
       "30488     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "30489     WI_3       WI    0    0    0    0    0    0    0    0    0     0   \n",
       "\n",
       "       d_11  d_12  d_13  d_14  d_15  d_16  d_17  d_18  d_19  ...  d_1889  \\\n",
       "0         0     0     0     0     0     0     0     0     0  ...       0   \n",
       "1         0     0     0     0     0     0     0     0     0  ...       0   \n",
       "2         0     0     0     0     0     0     0     0     0  ...       0   \n",
       "3         0     0     0     0     0     0     0     0     0  ...       0   \n",
       "4         0     0     0     0     0     0     0     0     0  ...       4   \n",
       "5         0     0     0     0     0     0     0     0     0  ...       0   \n",
       "6         0     0     0     0     0     0     0     0     0  ...       0   \n",
       "7        13     2     2    20     9     3     0     1     0  ...       2   \n",
       "8         4     3     1     0     4     4     1     2     0  ...       1   \n",
       "9         0     0     0     2     0     0     0     0     2  ...       1   \n",
       "10        0     0     0     0     0     0     0     0     0  ...       0   \n",
       "11        0     2     0     0     0     2     0     3     0  ...       0   \n",
       "12        0     0     0     0     0     0     0     0     0  ...       1   \n",
       "13        0     0     0     0     0     0     0     0     0  ...       1   \n",
       "14        0    25     0     9     2     1    14     5     0  ...       2   \n",
       "15        0     1     1     2     0     9     1     3     0  ...       4   \n",
       "16        0     0     0     0     0     0     0     0     0  ...       1   \n",
       "17        0     0     0     0     0     0     0     0     0  ...       0   \n",
       "18        0     0     0     0     0     0     0     0     0  ...      21   \n",
       "19        0     0     0     0     0     0     1     0     1  ...       1   \n",
       "20        0     0     0     0     0     0     0     0     0  ...       1   \n",
       "21        2     1     2     0     1     1     0     1     0  ...       0   \n",
       "22        3     0     0     0     4     1     0     0     1  ...       0   \n",
       "23        0     0     0     0     0     0     0     0     0  ...       0   \n",
       "24        0     0     0     0     0     0     0     0     0  ...       0   \n",
       "25        0     0     0     0     0     0     0     0     0  ...       0   \n",
       "26        0     0     0     0     0     0     0     0     0  ...       0   \n",
       "27        0     0     0     1     0     0     0     0     0  ...       2   \n",
       "28        0     0     4     0     6     2     1     1     2  ...       3   \n",
       "29        0     0     0     0     0     0     0     0     0  ...      11   \n",
       "...     ...   ...   ...   ...   ...   ...   ...   ...   ...  ...     ...   \n",
       "30460     0     0     0     0     0     0     0     0     0  ...       0   \n",
       "30461     0     0     0     0     0     0     0     0     0  ...       1   \n",
       "30462     3    21    32    47    31    23    49    58    50  ...       7   \n",
       "30463     0     0     0     0     0     0     0     0     0  ...       0   \n",
       "30464     0     0     0     0     0     0     0     0     0  ...       0   \n",
       "30465     0     0     0     0     0     0     0     0     0  ...       1   \n",
       "30466    14     5     9    12    13    24    12    13    10  ...       4   \n",
       "30467     0     0     0     0     0     0     0     0     0  ...       2   \n",
       "30468     0     0     0     0     0     0     0     0     0  ...       2   \n",
       "30469     6    13     4     8    10     8     6    10     6  ...       2   \n",
       "30470     5     1    36    15    21    17     4    11     7  ...      14   \n",
       "30471     0     0     0     0     0     0     0     0     0  ...       0   \n",
       "30472     0     0     0     0     0     0     0     0     0  ...       1   \n",
       "30473     0     0     0     0     0     0     0     0     0  ...      16   \n",
       "30474     2     2     0     3     0     3     3     0     2  ...       1   \n",
       "30475     0     0     0     0     0     0     0     0     0  ...       0   \n",
       "30476     0     0     0     0     0     0     0     0     0  ...       2   \n",
       "30477     0     0     0     0     0     0     0     0     0  ...       0   \n",
       "30478     0     0     0     0     0     0     0     0     0  ...       1   \n",
       "30479     1     5     2     0     3     1     0     0     3  ...       0   \n",
       "30480     0     0     0     0     0     0     0     0     0  ...       3   \n",
       "30481     1    12    13     7    15     9    14    12     5  ...       3   \n",
       "30482     1     6     2     3     3     6     0     2     3  ...       1   \n",
       "30483     0     0     0     0     0     0     0     0     0  ...       0   \n",
       "30484    10     7     3     0    16    10     9     0     0  ...       2   \n",
       "30485     0     3     4     4     0     0     1     0     1  ...       0   \n",
       "30486     1     1     0     4     2     0     1     2     1  ...       0   \n",
       "30487     7     5     3     5    20     8    10     3     3  ...       0   \n",
       "30488     0     0     0     0     0     0     0     0     0  ...       0   \n",
       "30489     0     0     0     0     0     0     0     0     0  ...       4   \n",
       "\n",
       "       d_1890  d_1891  d_1892  d_1893  d_1894  d_1895  d_1896  d_1897  d_1898  \\\n",
       "0           0       0       1       0       4       2       3       0       1   \n",
       "1           0       0       0       0       0       0       0       0       0   \n",
       "2           0       0       1       0       0       0       1       0       0   \n",
       "3           3       1       2       1       3       1       0       2       5   \n",
       "4           0       1       4       0       1       0       1       0       1   \n",
       "5           0       0       0       0       0       3       0       1       0   \n",
       "6           1       0       0       0       0       0       0       0       1   \n",
       "7          12      38      22       2       0      10      26       8      12   \n",
       "8           2       0       3       0       0       0       0       0       1   \n",
       "9           1       0       3       2       2       1       0       1       0   \n",
       "10          0       0       0       0       0       0       0       0       0   \n",
       "11          0       0       0       0       0       1       0       0       0   \n",
       "12          0       1       2       0       0       0       0       0       1   \n",
       "13          2       1       2       3       1       2       5       2       0   \n",
       "14         10       0       1       1       4       2       2       3      10   \n",
       "15         32       1       6       3       9       1       6       6       5   \n",
       "16          1       0       2       0       3       2       0       0       4   \n",
       "17          0       0       0       0       0       0       0       0       0   \n",
       "18          5       3      24       6      25       4       6      16       5   \n",
       "19          0       1       1       1       0       0       0       0       0   \n",
       "20          0       0       0       0       0       0       0       0       2   \n",
       "21          0       0       0       0       0       1       0       0       1   \n",
       "22          2       3       2       1       0       0       1       0       5   \n",
       "23          0       0       0       0       0       0       0       0       0   \n",
       "24          0       1       2       1       0       1       0       1       1   \n",
       "25          1       0       0       0       0       0       1       1       0   \n",
       "26          0       0       0       1       1       1       2       1       0   \n",
       "27          0       0       1       1       0       0       1       1       1   \n",
       "28          3       3       0       1       0       1       0       5       4   \n",
       "29         18       0       0       0       0       0       0       0      19   \n",
       "...       ...     ...     ...     ...     ...     ...     ...     ...     ...   \n",
       "30460       0       0       1       0       0       0       0       2       0   \n",
       "30461       0       0       1       1       2       0       0       1       1   \n",
       "30462       6      18      11      15       5      15      14       7      14   \n",
       "30463       1       5       3       2       1       1       2       6       1   \n",
       "30464       0       1       0       1       0       0       0       0       1   \n",
       "30465       0       0       0       0       1       0       0       0       0   \n",
       "30466       8      13       5       5       0      21       2      10       2   \n",
       "30467       1       0       3       2       0       4       2       2       3   \n",
       "30468       0       1       2       0       0       3       1       0       2   \n",
       "30469       1      14       6       5       8       2       4       3       5   \n",
       "30470       0       0       0       0       0       0       0       0       0   \n",
       "30471       0       5       4       5       2       5       3       5       4   \n",
       "30472       2       1       0       0       0       0       0       0       6   \n",
       "30473      20      32      35      14      13      19       8      23      35   \n",
       "30474       2       2       5       6       1       2       3       1       2   \n",
       "30475       0       0       1       0       0       1       0       0       0   \n",
       "30476       1       5       1       3       0       2       4       2       6   \n",
       "30477       0       0       0       0       0       0       0       0       0   \n",
       "30478       2       5      11       8      11       9       0      11       0   \n",
       "30479       0       0       0       1       1       0       0       0       0   \n",
       "30480       1       2       0       0       0       1       1       0       1   \n",
       "30481       4       3       3       1       6       1       3       1       2   \n",
       "30482       3       3       3       3       3       2       2       2       2   \n",
       "30483       0       0       1       0       0       0       0       0       4   \n",
       "30484       2       2       3       3       1       4       2       3       4   \n",
       "30485       0       0       0       0       0       0       0       0       0   \n",
       "30486       0       1       1       2       0       0       0       0       1   \n",
       "30487       0       1       1       2       1       4       0       0       2   \n",
       "30488       0       0       1       1       2       1       1       1       1   \n",
       "30489       3       3       1       2       3       2       0       0       1   \n",
       "\n",
       "       d_1899  d_1900  d_1901  d_1902  d_1903  d_1904  d_1905  d_1906  d_1907  \\\n",
       "0           2       0       0       0       1       1       3       0       1   \n",
       "1           0       0       0       0       0       0       0       0       0   \n",
       "2           0       0       0       1       2       2       1       2       1   \n",
       "3           4       2       0       3       0       1       0       5       4   \n",
       "4           1       2       0       1       1       2       1       1       0   \n",
       "5           0       1       4       0       0       0       1       0       1   \n",
       "6           1       0       1       0       0       0       0       0       1   \n",
       "7           4       5       2       8       4       0       0       1      37   \n",
       "8           1       0       7       0       0       0       0       1       1   \n",
       "9           0       1       0       0       0       1       0       0       0   \n",
       "10          0       0       0       0       0       0       0       1       0   \n",
       "11          0       1       0       0       0       0       0       1       0   \n",
       "12          0       1       0       0       1       2       0       2       1   \n",
       "13          1       0       0       4       3       0       2       2       1   \n",
       "14          2       1       1       8       3       1       4       2       2   \n",
       "15          0       3       4       4       9       5       6      15       9   \n",
       "16          3       0       3       6       2       1       0       0       0   \n",
       "17          0       0       0       0       0       0       0       0       0   \n",
       "18         10      24       6       5       6       3      31      30       0   \n",
       "19          0       0       0       0       0       1       1       0       0   \n",
       "20          1       0       1       0       1       0       2       3       0   \n",
       "21          2       0       0       1       1       0       0       1       0   \n",
       "22          4       3       0       0       1       0       2       1       3   \n",
       "23          0       0       0       0       1       0       0       0       0   \n",
       "24          1       0       2       0       0       0       0       0       1   \n",
       "25          0       1       1       0       0       0       1       0       0   \n",
       "26          0       0       0       0       0       0       0       0       0   \n",
       "27          0       0       0       0       1       2       0       0       1   \n",
       "28          0       4       1       1       0       0       0       5       1   \n",
       "29          4      25       0       0       0       0       0      12       0   \n",
       "...       ...     ...     ...     ...     ...     ...     ...     ...     ...   \n",
       "30460       1       0       1       0       1       0       0       0       1   \n",
       "30461       0       0       0       0       2       0       0       0       0   \n",
       "30462      12       6       9       6      12       7      10      14       3   \n",
       "30463       1       1       3       2       4       6       3       1       1   \n",
       "30464       0       1       0       1       1       3       1       1       0   \n",
       "30465       0       0       0       0       0       0       0       0       0   \n",
       "30466       8       7      11       0      11       3      12       3       1   \n",
       "30467       1       1       3       2       0       3       0       4       4   \n",
       "30468       0       0       0       0       0       2       3       1       1   \n",
       "30469       2       0       3       4       6       7       5       4       4   \n",
       "30470       0       0       0       0       0       0       0       0       0   \n",
       "30471       0       1       0       1       2       8       0       1       4   \n",
       "30472       1       1       3       0       0       0       0       0       0   \n",
       "30473      36      20      24       5      17       7      10       4      11   \n",
       "30474       2       2       2       0       2       4       2       1       0   \n",
       "30475       0       0       0       0       0       0       0       1       0   \n",
       "30476       0       2       3       4       5       1       3       2       1   \n",
       "30477       1       0       0       0       0       0       0       0       1   \n",
       "30478       0       2       4       2       6      10       3       0       0   \n",
       "30479       0       0       0       0       0       0       1       0       1   \n",
       "30480       4       2       2       2       0       3       0       2       1   \n",
       "30481       3       4       4       3       0       5       5       0       4   \n",
       "30482       2       2       0       2       1       1       1       0       3   \n",
       "30483       4       0       0       0       2       3       2       1       0   \n",
       "30484       4       0       7       0       5       0       4       2       4   \n",
       "30485       0       2       0       0       0       2       0       0       0   \n",
       "30486       1       1       1       0       0       0       0       0       0   \n",
       "30487       2       4       0       0       0       2       1       0       2   \n",
       "30488       2       0       1       0       3       0       0       1       0   \n",
       "30489       0       0       0       0       0       0       0       0       0   \n",
       "\n",
       "       d_1908  d_1909  d_1910  d_1911  d_1912  d_1913  \n",
       "0           1       1       3       0       1       1  \n",
       "1           0       1       0       0       0       0  \n",
       "2           1       1       0       1       1       1  \n",
       "3           1       0       1       3       7       2  \n",
       "4           1       1       2       2       2       4  \n",
       "5           0       0       0       2       0       0  \n",
       "6           0       1       0       0       1       1  \n",
       "7           3       4       6       3       2       1  \n",
       "8           6       0       0       0       0       0  \n",
       "9           0       0       0       2       0       2  \n",
       "10          0       0       0       0       0       0  \n",
       "11          0       0       1       0       0       0  \n",
       "12          0       0       0       0       1       1  \n",
       "13          2       0       0       3       1       1  \n",
       "14          1       0       0       2       5       4  \n",
       "15          4       4       0      15       1       6  \n",
       "16          0       0       0       2       1       6  \n",
       "17          0       0       0       0       0       0  \n",
       "18          5       0      11       4       6      12  \n",
       "19          0       0       0       0       0       0  \n",
       "20          0       0       0       0       1       0  \n",
       "21          0       1       1       0       0       0  \n",
       "22          0       1       1       0       4       1  \n",
       "23          0       0       0       2       0       0  \n",
       "24          0       0       2       2       2       1  \n",
       "25          0       0       0       0       1       0  \n",
       "26          1       0       0       0       2       0  \n",
       "27          0       1       1       1       1       1  \n",
       "28          2       1       4       0       0       3  \n",
       "29          8       7       7      19       3      11  \n",
       "...       ...     ...     ...     ...     ...     ...  \n",
       "30460       0       0       0       3       1       2  \n",
       "30461       0       0       0       0       1       0  \n",
       "30462      10       6       9       8       6      10  \n",
       "30463       1       5       1       3       7       2  \n",
       "30464       0       0       0       0       1       0  \n",
       "30465       0       0       0       0       0       0  \n",
       "30466       6      14       6       0       4       2  \n",
       "30467       1       3       0       0       5       1  \n",
       "30468       3       0       0       0       0       1  \n",
       "30469      10       0       1       0       3       0  \n",
       "30470       0       0       0       0       0       0  \n",
       "30471       0       0       2       6       1       0  \n",
       "30472       1       0       2       1       1       1  \n",
       "30473      22      27      29      24      10      28  \n",
       "30474       0       0       1       0       2       3  \n",
       "30475       1       2       0       0       1       0  \n",
       "30476       0       1       1       1       6       4  \n",
       "30477       0       0       0       0       0       0  \n",
       "30478       0       1       0       0       0       0  \n",
       "30479       0       0       0       0       0       1  \n",
       "30480       4       4       2       0       3       1  \n",
       "30481       1       1       3       1       0       2  \n",
       "30482       0       1       3       6       0       1  \n",
       "30483       2       0       0       0       4       0  \n",
       "30484       1       0       2       3       2       1  \n",
       "30485       0       0       1       0       0       1  \n",
       "30486       0       0       0       0       1       0  \n",
       "30487       0       1       0       0       1       0  \n",
       "30488       0       1       0       3       1       3  \n",
       "30489       0       0       0       0       0       0  \n",
       "\n",
       "[30490 rows x 1919 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train=pd.read_csv(path_trin_val)\n",
    "df_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 6841121 entries, 0 to 6841120\n",
      "Data columns (total 4 columns):\n",
      "store_id      object\n",
      "item_id       object\n",
      "wm_yr_wk      int64\n",
      "sell_price    float64\n",
      "dtypes: float64(1), int64(1), object(2)\n",
      "memory usage: 208.8+ MB\n"
     ]
    }
   ],
   "source": [
    "df_price=pd.read_csv(path_sell_price)\n",
    "df_price.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1969 entries, 0 to 1968\n",
      "Data columns (total 14 columns):\n",
      "date            1969 non-null object\n",
      "wm_yr_wk        1969 non-null int64\n",
      "weekday         1969 non-null object\n",
      "wday            1969 non-null int64\n",
      "month           1969 non-null int64\n",
      "year            1969 non-null int64\n",
      "d               1969 non-null object\n",
      "event_name_1    162 non-null object\n",
      "event_type_1    162 non-null object\n",
      "event_name_2    5 non-null object\n",
      "event_type_2    5 non-null object\n",
      "snap_CA         1969 non-null int64\n",
      "snap_TX         1969 non-null int64\n",
      "snap_WI         1969 non-null int64\n",
      "dtypes: int64(7), object(7)\n",
      "memory usage: 215.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df_cld=pd.read_csv(path_cld)\n",
    "df_cld.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>F1</th>\n",
       "      <th>F2</th>\n",
       "      <th>F3</th>\n",
       "      <th>F4</th>\n",
       "      <th>F5</th>\n",
       "      <th>F6</th>\n",
       "      <th>F7</th>\n",
       "      <th>F8</th>\n",
       "      <th>F9</th>\n",
       "      <th>F10</th>\n",
       "      <th>F11</th>\n",
       "      <th>F12</th>\n",
       "      <th>F13</th>\n",
       "      <th>F14</th>\n",
       "      <th>F15</th>\n",
       "      <th>F16</th>\n",
       "      <th>F17</th>\n",
       "      <th>F18</th>\n",
       "      <th>F19</th>\n",
       "      <th>F20</th>\n",
       "      <th>F21</th>\n",
       "      <th>F22</th>\n",
       "      <th>F23</th>\n",
       "      <th>F24</th>\n",
       "      <th>F25</th>\n",
       "      <th>F26</th>\n",
       "      <th>F27</th>\n",
       "      <th>F28</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HOBBIES_1_001_CA_1_validation</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HOBBIES_1_002_CA_1_validation</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HOBBIES_1_003_CA_1_validation</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              id  F1  F2  F3  F4  F5  F6  F7  F8  F9  F10  \\\n",
       "0  HOBBIES_1_001_CA_1_validation   0   0   0   0   0   0   0   0   0    0   \n",
       "1  HOBBIES_1_002_CA_1_validation   0   0   0   0   0   0   0   0   0    0   \n",
       "2  HOBBIES_1_003_CA_1_validation   0   0   0   0   0   0   0   0   0    0   \n",
       "\n",
       "   F11  F12  F13  F14  F15  F16  F17  F18  F19  F20  F21  F22  F23  F24  F25  \\\n",
       "0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0   \n",
       "1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0   \n",
       "2    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0   \n",
       "\n",
       "   F26  F27  F28  \n",
       "0    0    0    0  \n",
       "1    0    0    0  \n",
       "2    0    0    0  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sbmission=pd.read_csv(path_sbmssion)\n",
    "df_sbmission.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1913\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "['d_1',\n",
       " 'd_2',\n",
       " 'd_3',\n",
       " 'd_4',\n",
       " 'd_5',\n",
       " 'd_6',\n",
       " 'd_7',\n",
       " 'd_8',\n",
       " 'd_9',\n",
       " 'd_10',\n",
       " 'd_11',\n",
       " 'd_12',\n",
       " 'd_13',\n",
       " 'd_14',\n",
       " 'd_15',\n",
       " 'd_16',\n",
       " 'd_17',\n",
       " 'd_18',\n",
       " 'd_19',\n",
       " 'd_20',\n",
       " 'd_21',\n",
       " 'd_22',\n",
       " 'd_23',\n",
       " 'd_24',\n",
       " 'd_25',\n",
       " 'd_26',\n",
       " 'd_27',\n",
       " 'd_28',\n",
       " 'd_29',\n",
       " 'd_30',\n",
       " 'd_31',\n",
       " 'd_32',\n",
       " 'd_33',\n",
       " 'd_34',\n",
       " 'd_35',\n",
       " 'd_36',\n",
       " 'd_37',\n",
       " 'd_38',\n",
       " 'd_39',\n",
       " 'd_40',\n",
       " 'd_41',\n",
       " 'd_42',\n",
       " 'd_43',\n",
       " 'd_44',\n",
       " 'd_45',\n",
       " 'd_46',\n",
       " 'd_47',\n",
       " 'd_48',\n",
       " 'd_49',\n",
       " 'd_50',\n",
       " 'd_51',\n",
       " 'd_52',\n",
       " 'd_53',\n",
       " 'd_54',\n",
       " 'd_55',\n",
       " 'd_56',\n",
       " 'd_57',\n",
       " 'd_58',\n",
       " 'd_59',\n",
       " 'd_60',\n",
       " 'd_61',\n",
       " 'd_62',\n",
       " 'd_63',\n",
       " 'd_64',\n",
       " 'd_65',\n",
       " 'd_66',\n",
       " 'd_67',\n",
       " 'd_68',\n",
       " 'd_69',\n",
       " 'd_70',\n",
       " 'd_71',\n",
       " 'd_72',\n",
       " 'd_73',\n",
       " 'd_74',\n",
       " 'd_75',\n",
       " 'd_76',\n",
       " 'd_77',\n",
       " 'd_78',\n",
       " 'd_79',\n",
       " 'd_80',\n",
       " 'd_81',\n",
       " 'd_82',\n",
       " 'd_83',\n",
       " 'd_84',\n",
       " 'd_85',\n",
       " 'd_86',\n",
       " 'd_87',\n",
       " 'd_88',\n",
       " 'd_89',\n",
       " 'd_90',\n",
       " 'd_91',\n",
       " 'd_92',\n",
       " 'd_93',\n",
       " 'd_94',\n",
       " 'd_95',\n",
       " 'd_96',\n",
       " 'd_97',\n",
       " 'd_98',\n",
       " 'd_99',\n",
       " 'd_100',\n",
       " 'd_101',\n",
       " 'd_102',\n",
       " 'd_103',\n",
       " 'd_104',\n",
       " 'd_105',\n",
       " 'd_106',\n",
       " 'd_107',\n",
       " 'd_108',\n",
       " 'd_109',\n",
       " 'd_110',\n",
       " 'd_111',\n",
       " 'd_112',\n",
       " 'd_113',\n",
       " 'd_114',\n",
       " 'd_115',\n",
       " 'd_116',\n",
       " 'd_117',\n",
       " 'd_118',\n",
       " 'd_119',\n",
       " 'd_120',\n",
       " 'd_121',\n",
       " 'd_122',\n",
       " 'd_123',\n",
       " 'd_124',\n",
       " 'd_125',\n",
       " 'd_126',\n",
       " 'd_127',\n",
       " 'd_128',\n",
       " 'd_129',\n",
       " 'd_130',\n",
       " 'd_131',\n",
       " 'd_132',\n",
       " 'd_133',\n",
       " 'd_134',\n",
       " 'd_135',\n",
       " 'd_136',\n",
       " 'd_137',\n",
       " 'd_138',\n",
       " 'd_139',\n",
       " 'd_140',\n",
       " 'd_141',\n",
       " 'd_142',\n",
       " 'd_143',\n",
       " 'd_144',\n",
       " 'd_145',\n",
       " 'd_146',\n",
       " 'd_147',\n",
       " 'd_148',\n",
       " 'd_149',\n",
       " 'd_150',\n",
       " 'd_151',\n",
       " 'd_152',\n",
       " 'd_153',\n",
       " 'd_154',\n",
       " 'd_155',\n",
       " 'd_156',\n",
       " 'd_157',\n",
       " 'd_158',\n",
       " 'd_159',\n",
       " 'd_160',\n",
       " 'd_161',\n",
       " 'd_162',\n",
       " 'd_163',\n",
       " 'd_164',\n",
       " 'd_165',\n",
       " 'd_166',\n",
       " 'd_167',\n",
       " 'd_168',\n",
       " 'd_169',\n",
       " 'd_170',\n",
       " 'd_171',\n",
       " 'd_172',\n",
       " 'd_173',\n",
       " 'd_174',\n",
       " 'd_175',\n",
       " 'd_176',\n",
       " 'd_177',\n",
       " 'd_178',\n",
       " 'd_179',\n",
       " 'd_180',\n",
       " 'd_181',\n",
       " 'd_182',\n",
       " 'd_183',\n",
       " 'd_184',\n",
       " 'd_185',\n",
       " 'd_186',\n",
       " 'd_187',\n",
       " 'd_188',\n",
       " 'd_189',\n",
       " 'd_190',\n",
       " 'd_191',\n",
       " 'd_192',\n",
       " 'd_193',\n",
       " 'd_194',\n",
       " 'd_195',\n",
       " 'd_196',\n",
       " 'd_197',\n",
       " 'd_198',\n",
       " 'd_199',\n",
       " 'd_200',\n",
       " 'd_201',\n",
       " 'd_202',\n",
       " 'd_203',\n",
       " 'd_204',\n",
       " 'd_205',\n",
       " 'd_206',\n",
       " 'd_207',\n",
       " 'd_208',\n",
       " 'd_209',\n",
       " 'd_210',\n",
       " 'd_211',\n",
       " 'd_212',\n",
       " 'd_213',\n",
       " 'd_214',\n",
       " 'd_215',\n",
       " 'd_216',\n",
       " 'd_217',\n",
       " 'd_218',\n",
       " 'd_219',\n",
       " 'd_220',\n",
       " 'd_221',\n",
       " 'd_222',\n",
       " 'd_223',\n",
       " 'd_224',\n",
       " 'd_225',\n",
       " 'd_226',\n",
       " 'd_227',\n",
       " 'd_228',\n",
       " 'd_229',\n",
       " 'd_230',\n",
       " 'd_231',\n",
       " 'd_232',\n",
       " 'd_233',\n",
       " 'd_234',\n",
       " 'd_235',\n",
       " 'd_236',\n",
       " 'd_237',\n",
       " 'd_238',\n",
       " 'd_239',\n",
       " 'd_240',\n",
       " 'd_241',\n",
       " 'd_242',\n",
       " 'd_243',\n",
       " 'd_244',\n",
       " 'd_245',\n",
       " 'd_246',\n",
       " 'd_247',\n",
       " 'd_248',\n",
       " 'd_249',\n",
       " 'd_250',\n",
       " 'd_251',\n",
       " 'd_252',\n",
       " 'd_253',\n",
       " 'd_254',\n",
       " 'd_255',\n",
       " 'd_256',\n",
       " 'd_257',\n",
       " 'd_258',\n",
       " 'd_259',\n",
       " 'd_260',\n",
       " 'd_261',\n",
       " 'd_262',\n",
       " 'd_263',\n",
       " 'd_264',\n",
       " 'd_265',\n",
       " 'd_266',\n",
       " 'd_267',\n",
       " 'd_268',\n",
       " 'd_269',\n",
       " 'd_270',\n",
       " 'd_271',\n",
       " 'd_272',\n",
       " 'd_273',\n",
       " 'd_274',\n",
       " 'd_275',\n",
       " 'd_276',\n",
       " 'd_277',\n",
       " 'd_278',\n",
       " 'd_279',\n",
       " 'd_280',\n",
       " 'd_281',\n",
       " 'd_282',\n",
       " 'd_283',\n",
       " 'd_284',\n",
       " 'd_285',\n",
       " 'd_286',\n",
       " 'd_287',\n",
       " 'd_288',\n",
       " 'd_289',\n",
       " 'd_290',\n",
       " 'd_291',\n",
       " 'd_292',\n",
       " 'd_293',\n",
       " 'd_294',\n",
       " 'd_295',\n",
       " 'd_296',\n",
       " 'd_297',\n",
       " 'd_298',\n",
       " 'd_299',\n",
       " 'd_300',\n",
       " 'd_301',\n",
       " 'd_302',\n",
       " 'd_303',\n",
       " 'd_304',\n",
       " 'd_305',\n",
       " 'd_306',\n",
       " 'd_307',\n",
       " 'd_308',\n",
       " 'd_309',\n",
       " 'd_310',\n",
       " 'd_311',\n",
       " 'd_312',\n",
       " 'd_313',\n",
       " 'd_314',\n",
       " 'd_315',\n",
       " 'd_316',\n",
       " 'd_317',\n",
       " 'd_318',\n",
       " 'd_319',\n",
       " 'd_320',\n",
       " 'd_321',\n",
       " 'd_322',\n",
       " 'd_323',\n",
       " 'd_324',\n",
       " 'd_325',\n",
       " 'd_326',\n",
       " 'd_327',\n",
       " 'd_328',\n",
       " 'd_329',\n",
       " 'd_330',\n",
       " 'd_331',\n",
       " 'd_332',\n",
       " 'd_333',\n",
       " 'd_334',\n",
       " 'd_335',\n",
       " 'd_336',\n",
       " 'd_337',\n",
       " 'd_338',\n",
       " 'd_339',\n",
       " 'd_340',\n",
       " 'd_341',\n",
       " 'd_342',\n",
       " 'd_343',\n",
       " 'd_344',\n",
       " 'd_345',\n",
       " 'd_346',\n",
       " 'd_347',\n",
       " 'd_348',\n",
       " 'd_349',\n",
       " 'd_350',\n",
       " 'd_351',\n",
       " 'd_352',\n",
       " 'd_353',\n",
       " 'd_354',\n",
       " 'd_355',\n",
       " 'd_356',\n",
       " 'd_357',\n",
       " 'd_358',\n",
       " 'd_359',\n",
       " 'd_360',\n",
       " 'd_361',\n",
       " 'd_362',\n",
       " 'd_363',\n",
       " 'd_364',\n",
       " 'd_365',\n",
       " 'd_366',\n",
       " 'd_367',\n",
       " 'd_368',\n",
       " 'd_369',\n",
       " 'd_370',\n",
       " 'd_371',\n",
       " 'd_372',\n",
       " 'd_373',\n",
       " 'd_374',\n",
       " 'd_375',\n",
       " 'd_376',\n",
       " 'd_377',\n",
       " 'd_378',\n",
       " 'd_379',\n",
       " 'd_380',\n",
       " 'd_381',\n",
       " 'd_382',\n",
       " 'd_383',\n",
       " 'd_384',\n",
       " 'd_385',\n",
       " 'd_386',\n",
       " 'd_387',\n",
       " 'd_388',\n",
       " 'd_389',\n",
       " 'd_390',\n",
       " 'd_391',\n",
       " 'd_392',\n",
       " 'd_393',\n",
       " 'd_394',\n",
       " 'd_395',\n",
       " 'd_396',\n",
       " 'd_397',\n",
       " 'd_398',\n",
       " 'd_399',\n",
       " 'd_400',\n",
       " 'd_401',\n",
       " 'd_402',\n",
       " 'd_403',\n",
       " 'd_404',\n",
       " 'd_405',\n",
       " 'd_406',\n",
       " 'd_407',\n",
       " 'd_408',\n",
       " 'd_409',\n",
       " 'd_410',\n",
       " 'd_411',\n",
       " 'd_412',\n",
       " 'd_413',\n",
       " 'd_414',\n",
       " 'd_415',\n",
       " 'd_416',\n",
       " 'd_417',\n",
       " 'd_418',\n",
       " 'd_419',\n",
       " 'd_420',\n",
       " 'd_421',\n",
       " 'd_422',\n",
       " 'd_423',\n",
       " 'd_424',\n",
       " 'd_425',\n",
       " 'd_426',\n",
       " 'd_427',\n",
       " 'd_428',\n",
       " 'd_429',\n",
       " 'd_430',\n",
       " 'd_431',\n",
       " 'd_432',\n",
       " 'd_433',\n",
       " 'd_434',\n",
       " 'd_435',\n",
       " 'd_436',\n",
       " 'd_437',\n",
       " 'd_438',\n",
       " 'd_439',\n",
       " 'd_440',\n",
       " 'd_441',\n",
       " 'd_442',\n",
       " 'd_443',\n",
       " 'd_444',\n",
       " 'd_445',\n",
       " 'd_446',\n",
       " 'd_447',\n",
       " 'd_448',\n",
       " 'd_449',\n",
       " 'd_450',\n",
       " 'd_451',\n",
       " 'd_452',\n",
       " 'd_453',\n",
       " 'd_454',\n",
       " 'd_455',\n",
       " 'd_456',\n",
       " 'd_457',\n",
       " 'd_458',\n",
       " 'd_459',\n",
       " 'd_460',\n",
       " 'd_461',\n",
       " 'd_462',\n",
       " 'd_463',\n",
       " 'd_464',\n",
       " 'd_465',\n",
       " 'd_466',\n",
       " 'd_467',\n",
       " 'd_468',\n",
       " 'd_469',\n",
       " 'd_470',\n",
       " 'd_471',\n",
       " 'd_472',\n",
       " 'd_473',\n",
       " 'd_474',\n",
       " 'd_475',\n",
       " 'd_476',\n",
       " 'd_477',\n",
       " 'd_478',\n",
       " 'd_479',\n",
       " 'd_480',\n",
       " 'd_481',\n",
       " 'd_482',\n",
       " 'd_483',\n",
       " 'd_484',\n",
       " 'd_485',\n",
       " 'd_486',\n",
       " 'd_487',\n",
       " 'd_488',\n",
       " 'd_489',\n",
       " 'd_490',\n",
       " 'd_491',\n",
       " 'd_492',\n",
       " 'd_493',\n",
       " 'd_494',\n",
       " 'd_495',\n",
       " 'd_496',\n",
       " 'd_497',\n",
       " 'd_498',\n",
       " 'd_499',\n",
       " 'd_500',\n",
       " 'd_501',\n",
       " 'd_502',\n",
       " 'd_503',\n",
       " 'd_504',\n",
       " 'd_505',\n",
       " 'd_506',\n",
       " 'd_507',\n",
       " 'd_508',\n",
       " 'd_509',\n",
       " 'd_510',\n",
       " 'd_511',\n",
       " 'd_512',\n",
       " 'd_513',\n",
       " 'd_514',\n",
       " 'd_515',\n",
       " 'd_516',\n",
       " 'd_517',\n",
       " 'd_518',\n",
       " 'd_519',\n",
       " 'd_520',\n",
       " 'd_521',\n",
       " 'd_522',\n",
       " 'd_523',\n",
       " 'd_524',\n",
       " 'd_525',\n",
       " 'd_526',\n",
       " 'd_527',\n",
       " 'd_528',\n",
       " 'd_529',\n",
       " 'd_530',\n",
       " 'd_531',\n",
       " 'd_532',\n",
       " 'd_533',\n",
       " 'd_534',\n",
       " 'd_535',\n",
       " 'd_536',\n",
       " 'd_537',\n",
       " 'd_538',\n",
       " 'd_539',\n",
       " 'd_540',\n",
       " 'd_541',\n",
       " 'd_542',\n",
       " 'd_543',\n",
       " 'd_544',\n",
       " 'd_545',\n",
       " 'd_546',\n",
       " 'd_547',\n",
       " 'd_548',\n",
       " 'd_549',\n",
       " 'd_550',\n",
       " 'd_551',\n",
       " 'd_552',\n",
       " 'd_553',\n",
       " 'd_554',\n",
       " 'd_555',\n",
       " 'd_556',\n",
       " 'd_557',\n",
       " 'd_558',\n",
       " 'd_559',\n",
       " 'd_560',\n",
       " 'd_561',\n",
       " 'd_562',\n",
       " 'd_563',\n",
       " 'd_564',\n",
       " 'd_565',\n",
       " 'd_566',\n",
       " 'd_567',\n",
       " 'd_568',\n",
       " 'd_569',\n",
       " 'd_570',\n",
       " 'd_571',\n",
       " 'd_572',\n",
       " 'd_573',\n",
       " 'd_574',\n",
       " 'd_575',\n",
       " 'd_576',\n",
       " 'd_577',\n",
       " 'd_578',\n",
       " 'd_579',\n",
       " 'd_580',\n",
       " 'd_581',\n",
       " 'd_582',\n",
       " 'd_583',\n",
       " 'd_584',\n",
       " 'd_585',\n",
       " 'd_586',\n",
       " 'd_587',\n",
       " 'd_588',\n",
       " 'd_589',\n",
       " 'd_590',\n",
       " 'd_591',\n",
       " 'd_592',\n",
       " 'd_593',\n",
       " 'd_594',\n",
       " 'd_595',\n",
       " 'd_596',\n",
       " 'd_597',\n",
       " 'd_598',\n",
       " 'd_599',\n",
       " 'd_600',\n",
       " 'd_601',\n",
       " 'd_602',\n",
       " 'd_603',\n",
       " 'd_604',\n",
       " 'd_605',\n",
       " 'd_606',\n",
       " 'd_607',\n",
       " 'd_608',\n",
       " 'd_609',\n",
       " 'd_610',\n",
       " 'd_611',\n",
       " 'd_612',\n",
       " 'd_613',\n",
       " 'd_614',\n",
       " 'd_615',\n",
       " 'd_616',\n",
       " 'd_617',\n",
       " 'd_618',\n",
       " 'd_619',\n",
       " 'd_620',\n",
       " 'd_621',\n",
       " 'd_622',\n",
       " 'd_623',\n",
       " 'd_624',\n",
       " 'd_625',\n",
       " 'd_626',\n",
       " 'd_627',\n",
       " 'd_628',\n",
       " 'd_629',\n",
       " 'd_630',\n",
       " 'd_631',\n",
       " 'd_632',\n",
       " 'd_633',\n",
       " 'd_634',\n",
       " 'd_635',\n",
       " 'd_636',\n",
       " 'd_637',\n",
       " 'd_638',\n",
       " 'd_639',\n",
       " 'd_640',\n",
       " 'd_641',\n",
       " 'd_642',\n",
       " 'd_643',\n",
       " 'd_644',\n",
       " 'd_645',\n",
       " 'd_646',\n",
       " 'd_647',\n",
       " 'd_648',\n",
       " 'd_649',\n",
       " 'd_650',\n",
       " 'd_651',\n",
       " 'd_652',\n",
       " 'd_653',\n",
       " 'd_654',\n",
       " 'd_655',\n",
       " 'd_656',\n",
       " 'd_657',\n",
       " 'd_658',\n",
       " 'd_659',\n",
       " 'd_660',\n",
       " 'd_661',\n",
       " 'd_662',\n",
       " 'd_663',\n",
       " 'd_664',\n",
       " 'd_665',\n",
       " 'd_666',\n",
       " 'd_667',\n",
       " 'd_668',\n",
       " 'd_669',\n",
       " 'd_670',\n",
       " 'd_671',\n",
       " 'd_672',\n",
       " 'd_673',\n",
       " 'd_674',\n",
       " 'd_675',\n",
       " 'd_676',\n",
       " 'd_677',\n",
       " 'd_678',\n",
       " 'd_679',\n",
       " 'd_680',\n",
       " 'd_681',\n",
       " 'd_682',\n",
       " 'd_683',\n",
       " 'd_684',\n",
       " 'd_685',\n",
       " 'd_686',\n",
       " 'd_687',\n",
       " 'd_688',\n",
       " 'd_689',\n",
       " 'd_690',\n",
       " 'd_691',\n",
       " 'd_692',\n",
       " 'd_693',\n",
       " 'd_694',\n",
       " 'd_695',\n",
       " 'd_696',\n",
       " 'd_697',\n",
       " 'd_698',\n",
       " 'd_699',\n",
       " 'd_700',\n",
       " 'd_701',\n",
       " 'd_702',\n",
       " 'd_703',\n",
       " 'd_704',\n",
       " 'd_705',\n",
       " 'd_706',\n",
       " 'd_707',\n",
       " 'd_708',\n",
       " 'd_709',\n",
       " 'd_710',\n",
       " 'd_711',\n",
       " 'd_712',\n",
       " 'd_713',\n",
       " 'd_714',\n",
       " 'd_715',\n",
       " 'd_716',\n",
       " 'd_717',\n",
       " 'd_718',\n",
       " 'd_719',\n",
       " 'd_720',\n",
       " 'd_721',\n",
       " 'd_722',\n",
       " 'd_723',\n",
       " 'd_724',\n",
       " 'd_725',\n",
       " 'd_726',\n",
       " 'd_727',\n",
       " 'd_728',\n",
       " 'd_729',\n",
       " 'd_730',\n",
       " 'd_731',\n",
       " 'd_732',\n",
       " 'd_733',\n",
       " 'd_734',\n",
       " 'd_735',\n",
       " 'd_736',\n",
       " 'd_737',\n",
       " 'd_738',\n",
       " 'd_739',\n",
       " 'd_740',\n",
       " 'd_741',\n",
       " 'd_742',\n",
       " 'd_743',\n",
       " 'd_744',\n",
       " 'd_745',\n",
       " 'd_746',\n",
       " 'd_747',\n",
       " 'd_748',\n",
       " 'd_749',\n",
       " 'd_750',\n",
       " 'd_751',\n",
       " 'd_752',\n",
       " 'd_753',\n",
       " 'd_754',\n",
       " 'd_755',\n",
       " 'd_756',\n",
       " 'd_757',\n",
       " 'd_758',\n",
       " 'd_759',\n",
       " 'd_760',\n",
       " 'd_761',\n",
       " 'd_762',\n",
       " 'd_763',\n",
       " 'd_764',\n",
       " 'd_765',\n",
       " 'd_766',\n",
       " 'd_767',\n",
       " 'd_768',\n",
       " 'd_769',\n",
       " 'd_770',\n",
       " 'd_771',\n",
       " 'd_772',\n",
       " 'd_773',\n",
       " 'd_774',\n",
       " 'd_775',\n",
       " 'd_776',\n",
       " 'd_777',\n",
       " 'd_778',\n",
       " 'd_779',\n",
       " 'd_780',\n",
       " 'd_781',\n",
       " 'd_782',\n",
       " 'd_783',\n",
       " 'd_784',\n",
       " 'd_785',\n",
       " 'd_786',\n",
       " 'd_787',\n",
       " 'd_788',\n",
       " 'd_789',\n",
       " 'd_790',\n",
       " 'd_791',\n",
       " 'd_792',\n",
       " 'd_793',\n",
       " 'd_794',\n",
       " 'd_795',\n",
       " 'd_796',\n",
       " 'd_797',\n",
       " 'd_798',\n",
       " 'd_799',\n",
       " 'd_800',\n",
       " 'd_801',\n",
       " 'd_802',\n",
       " 'd_803',\n",
       " 'd_804',\n",
       " 'd_805',\n",
       " 'd_806',\n",
       " 'd_807',\n",
       " 'd_808',\n",
       " 'd_809',\n",
       " 'd_810',\n",
       " 'd_811',\n",
       " 'd_812',\n",
       " 'd_813',\n",
       " 'd_814',\n",
       " 'd_815',\n",
       " 'd_816',\n",
       " 'd_817',\n",
       " 'd_818',\n",
       " 'd_819',\n",
       " 'd_820',\n",
       " 'd_821',\n",
       " 'd_822',\n",
       " 'd_823',\n",
       " 'd_824',\n",
       " 'd_825',\n",
       " 'd_826',\n",
       " 'd_827',\n",
       " 'd_828',\n",
       " 'd_829',\n",
       " 'd_830',\n",
       " 'd_831',\n",
       " 'd_832',\n",
       " 'd_833',\n",
       " 'd_834',\n",
       " 'd_835',\n",
       " 'd_836',\n",
       " 'd_837',\n",
       " 'd_838',\n",
       " 'd_839',\n",
       " 'd_840',\n",
       " 'd_841',\n",
       " 'd_842',\n",
       " 'd_843',\n",
       " 'd_844',\n",
       " 'd_845',\n",
       " 'd_846',\n",
       " 'd_847',\n",
       " 'd_848',\n",
       " 'd_849',\n",
       " 'd_850',\n",
       " 'd_851',\n",
       " 'd_852',\n",
       " 'd_853',\n",
       " 'd_854',\n",
       " 'd_855',\n",
       " 'd_856',\n",
       " 'd_857',\n",
       " 'd_858',\n",
       " 'd_859',\n",
       " 'd_860',\n",
       " 'd_861',\n",
       " 'd_862',\n",
       " 'd_863',\n",
       " 'd_864',\n",
       " 'd_865',\n",
       " 'd_866',\n",
       " 'd_867',\n",
       " 'd_868',\n",
       " 'd_869',\n",
       " 'd_870',\n",
       " 'd_871',\n",
       " 'd_872',\n",
       " 'd_873',\n",
       " 'd_874',\n",
       " 'd_875',\n",
       " 'd_876',\n",
       " 'd_877',\n",
       " 'd_878',\n",
       " 'd_879',\n",
       " 'd_880',\n",
       " 'd_881',\n",
       " 'd_882',\n",
       " 'd_883',\n",
       " 'd_884',\n",
       " 'd_885',\n",
       " 'd_886',\n",
       " 'd_887',\n",
       " 'd_888',\n",
       " 'd_889',\n",
       " 'd_890',\n",
       " 'd_891',\n",
       " 'd_892',\n",
       " 'd_893',\n",
       " 'd_894',\n",
       " 'd_895',\n",
       " 'd_896',\n",
       " 'd_897',\n",
       " 'd_898',\n",
       " 'd_899',\n",
       " 'd_900',\n",
       " 'd_901',\n",
       " 'd_902',\n",
       " 'd_903',\n",
       " 'd_904',\n",
       " 'd_905',\n",
       " 'd_906',\n",
       " 'd_907',\n",
       " 'd_908',\n",
       " 'd_909',\n",
       " 'd_910',\n",
       " 'd_911',\n",
       " 'd_912',\n",
       " 'd_913',\n",
       " 'd_914',\n",
       " 'd_915',\n",
       " 'd_916',\n",
       " 'd_917',\n",
       " 'd_918',\n",
       " 'd_919',\n",
       " 'd_920',\n",
       " 'd_921',\n",
       " 'd_922',\n",
       " 'd_923',\n",
       " 'd_924',\n",
       " 'd_925',\n",
       " 'd_926',\n",
       " 'd_927',\n",
       " 'd_928',\n",
       " 'd_929',\n",
       " 'd_930',\n",
       " 'd_931',\n",
       " 'd_932',\n",
       " 'd_933',\n",
       " 'd_934',\n",
       " 'd_935',\n",
       " 'd_936',\n",
       " 'd_937',\n",
       " 'd_938',\n",
       " 'd_939',\n",
       " 'd_940',\n",
       " 'd_941',\n",
       " 'd_942',\n",
       " 'd_943',\n",
       " 'd_944',\n",
       " 'd_945',\n",
       " 'd_946',\n",
       " 'd_947',\n",
       " 'd_948',\n",
       " 'd_949',\n",
       " 'd_950',\n",
       " 'd_951',\n",
       " 'd_952',\n",
       " 'd_953',\n",
       " 'd_954',\n",
       " 'd_955',\n",
       " 'd_956',\n",
       " 'd_957',\n",
       " 'd_958',\n",
       " 'd_959',\n",
       " 'd_960',\n",
       " 'd_961',\n",
       " 'd_962',\n",
       " 'd_963',\n",
       " 'd_964',\n",
       " 'd_965',\n",
       " 'd_966',\n",
       " 'd_967',\n",
       " 'd_968',\n",
       " 'd_969',\n",
       " 'd_970',\n",
       " 'd_971',\n",
       " 'd_972',\n",
       " 'd_973',\n",
       " 'd_974',\n",
       " 'd_975',\n",
       " 'd_976',\n",
       " 'd_977',\n",
       " 'd_978',\n",
       " 'd_979',\n",
       " 'd_980',\n",
       " 'd_981',\n",
       " 'd_982',\n",
       " 'd_983',\n",
       " 'd_984',\n",
       " 'd_985',\n",
       " 'd_986',\n",
       " 'd_987',\n",
       " 'd_988',\n",
       " 'd_989',\n",
       " 'd_990',\n",
       " 'd_991',\n",
       " 'd_992',\n",
       " 'd_993',\n",
       " 'd_994',\n",
       " 'd_995',\n",
       " 'd_996',\n",
       " 'd_997',\n",
       " 'd_998',\n",
       " 'd_999',\n",
       " 'd_1000',\n",
       " ...]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d_cols = [c for c in df_train.columns if 'd_' in c]\n",
    "print(len(d_cols))\n",
    "d_cols"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "num of months 159.41666666666666\n",
      "num of years 5.313888888888888\n"
     ]
    }
   ],
   "source": [
    "#how many months and years\n",
    "print( 'num of months', len(d_cols)/12)\n",
    "print( 'num of years', len(d_cols)/12/30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "example=example.rename(columns={8412:'FOODS_3_090_CA_3'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "example=example.reset_index().rename(columns={'index':'d'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "example=example.merge(df_cld, how='left', validate='1:1')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x125c505f8>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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vxKRyftF7H9FRLnG7BgoSdKYJEkLAVwJ4I+WHSgRUYYZHf9EUZwC4GgAt4iiuAZArSiKj1p8uEREGWFy7vdK9LYAsArAIZYcJBGRBUyOf50Anor+/DSAQy05SJoQBrCIKO+JojgJwGoAN0qS9ED04ndEUTw2+vOpAP6Z4vYrAdwF4BRJkt628liJiDItA2Pg/0THQSCyYy2kd10iIicxM/5JkrRXkiRR7gEDoEuSpAutPmYiIrPMzv0A3A/gnOjPxwPYaMVxEhFlWgbGv7UATov+vALANiuOkybGk+0DICKywfcA1AC4SRRFuRbutwD8WhRFH4DtiKQW6/kVAB+AhyJVBCFJkvRVC4+XiCiTzI6BvwZwjyiKNyMSvGIvGCLKFWbHPyKiXGR27PsOgAdEUfw6gEEAX7HyYImIMsjs+HcbgPtFUXwTwBiAi608WEqPEA6Hx78WERERERERERERERERkU1YQpCIiIiIiIiIiIiIiIgchQEsIiIiIiIiIiIiIiIichQGsIiIiIiIiIiIiIiIiMhRGMAiIiIiIiIiIiIiIiIiR2EAi4iIiIiIiIiIiIiIiByFASwiIiIiIiILiaJ4riiKa8a5zs2iKJ5l0yERERERERE5HgNYRERERERE2XccAG+2D4KIiIiIiMgphHA4nO1jICIiIiIiyiuiKP4IwJcBdAL4EMBUAFcCuBtABYDJADYDuADA5QB+BqAdwLUAno3++xgAbgDvALhGkqQ+ex8FERERERFR9jADi4iIiIiIKIOipQDPAXAwgCMBVEV/dQWAhyRJWgZgHoDZAE6XJOluAG8DuF6SpFUAvgMgAGCJJEmLAOwF8FN7HwUREREREVF2ebJ9AERERERERHnmBAB/lSSpHwBEUXwAwDUAbgRwoiiKNwDYD8AUAOVJbv95ANXR6wKAD0CbDcdNRERERETkGAxgERERERERZZ6g+jkQ/f8jiHwHexyRMoEz4q4ncwP4liRJzwOAKIrlAIqtO1QiIiIiIiLnYQlBIiIiIiKizHoewHmiKFaLougCcFH08pMB/EiSpMei/16KSLAKiAS5vNGfXwTwTVEUfdHb3wfgdnsOnYiIiIiIyBmYgUVERERERJRBkiQ9J4rigYj0teoGsAVAA4DvAVgliuIggF4AryHSCwsAngJwuyiKPgA/BnAHgHcQCXBtBnCdrQ+CiIiIiIgoy4RwOJztYyAiIiIiIiIiIiIiIiJSsIQgEREREREREREREREROQoDWEREREREREREREREROQoDGARERERERERERERERGRozCARURERERERERERERERI7CABYRERERERERERERERE5CgNYRERERERERERERERE5CgMYBEREREREREREREREZGjMIBFREREREREREREREREjvL/ATu/tZ2vcjkFAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 2160x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "example['date']=pd.to_datetime(example['date'])\n",
    "example.set_index('date')['FOODS_3_090_CA_3'][7:].plot(figsize=(30,5),color=next(color_cycle),title='FOODS_3_090_CA_3_ sales')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "example=pd.DataFrame(example.iloc[6:,:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "example['date']=pd.to_datetime(example['date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "example=example.infer_objects() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c226d5908>"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "example.groupby('wday').mean()['FOODS_3_090_CA_3'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c234dea90>"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "example.groupby('weekday').mean()['FOODS_3_090_CA_3'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c235510f0>"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "example.groupby('month').mean()['FOODS_3_090_CA_3'].plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>item_id</th>\n",
       "      <th>dept_id</th>\n",
       "      <th>cat_id</th>\n",
       "      <th>store_id</th>\n",
       "      <th>state_id</th>\n",
       "      <th>d_1</th>\n",
       "      <th>d_2</th>\n",
       "      <th>d_3</th>\n",
       "      <th>d_4</th>\n",
       "      <th>d_5</th>\n",
       "      <th>d_6</th>\n",
       "      <th>d_7</th>\n",
       "      <th>d_8</th>\n",
       "      <th>d_9</th>\n",
       "      <th>d_10</th>\n",
       "      <th>d_11</th>\n",
       "      <th>d_12</th>\n",
       "      <th>d_13</th>\n",
       "      <th>d_14</th>\n",
       "      <th>d_15</th>\n",
       "      <th>d_16</th>\n",
       "      <th>d_17</th>\n",
       "      <th>d_18</th>\n",
       "      <th>d_19</th>\n",
       "      <th>...</th>\n",
       "      <th>d_1889</th>\n",
       "      <th>d_1890</th>\n",
       "      <th>d_1891</th>\n",
       "      <th>d_1892</th>\n",
       "      <th>d_1893</th>\n",
       "      <th>d_1894</th>\n",
       "      <th>d_1895</th>\n",
       "      <th>d_1896</th>\n",
       "      <th>d_1897</th>\n",
       "      <th>d_1898</th>\n",
       "      <th>d_1899</th>\n",
       "      <th>d_1900</th>\n",
       "      <th>d_1901</th>\n",
       "      <th>d_1902</th>\n",
       "      <th>d_1903</th>\n",
       "      <th>d_1904</th>\n",
       "      <th>d_1905</th>\n",
       "      <th>d_1906</th>\n",
       "      <th>d_1907</th>\n",
       "      <th>d_1908</th>\n",
       "      <th>d_1909</th>\n",
       "      <th>d_1910</th>\n",
       "      <th>d_1911</th>\n",
       "      <th>d_1912</th>\n",
       "      <th>d_1913</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HOBBIES_1_001_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_001</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HOBBIES_1_002_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_002</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HOBBIES_1_003_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_003</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HOBBIES_1_004_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_004</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HOBBIES_1_005_CA_1_validation</td>\n",
       "      <td>HOBBIES_1_005</td>\n",
       "      <td>HOBBIES_1</td>\n",
       "      <td>HOBBIES</td>\n",
       "      <td>CA_1</td>\n",
       "      <td>CA</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 1919 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                              id        item_id    dept_id   cat_id store_id  \\\n",
       "0  HOBBIES_1_001_CA_1_validation  HOBBIES_1_001  HOBBIES_1  HOBBIES     CA_1   \n",
       "1  HOBBIES_1_002_CA_1_validation  HOBBIES_1_002  HOBBIES_1  HOBBIES     CA_1   \n",
       "2  HOBBIES_1_003_CA_1_validation  HOBBIES_1_003  HOBBIES_1  HOBBIES     CA_1   \n",
       "3  HOBBIES_1_004_CA_1_validation  HOBBIES_1_004  HOBBIES_1  HOBBIES     CA_1   \n",
       "4  HOBBIES_1_005_CA_1_validation  HOBBIES_1_005  HOBBIES_1  HOBBIES     CA_1   \n",
       "\n",
       "  state_id  d_1  d_2  d_3  d_4  d_5  d_6  d_7  d_8  d_9  d_10  d_11  d_12  \\\n",
       "0       CA    0    0    0    0    0    0    0    0    0     0     0     0   \n",
       "1       CA    0    0    0    0    0    0    0    0    0     0     0     0   \n",
       "2       CA    0    0    0    0    0    0    0    0    0     0     0     0   \n",
       "3       CA    0    0    0    0    0    0    0    0    0     0     0     0   \n",
       "4       CA    0    0    0    0    0    0    0    0    0     0     0     0   \n",
       "\n",
       "   d_13  d_14  d_15  d_16  d_17  d_18  d_19  ...  d_1889  d_1890  d_1891  \\\n",
       "0     0     0     0     0     0     0     0  ...       0       0       0   \n",
       "1     0     0     0     0     0     0     0  ...       0       0       0   \n",
       "2     0     0     0     0     0     0     0  ...       0       0       0   \n",
       "3     0     0     0     0     0     0     0  ...       0       3       1   \n",
       "4     0     0     0     0     0     0     0  ...       4       0       1   \n",
       "\n",
       "   d_1892  d_1893  d_1894  d_1895  d_1896  d_1897  d_1898  d_1899  d_1900  \\\n",
       "0       1       0       4       2       3       0       1       2       0   \n",
       "1       0       0       0       0       0       0       0       0       0   \n",
       "2       1       0       0       0       1       0       0       0       0   \n",
       "3       2       1       3       1       0       2       5       4       2   \n",
       "4       4       0       1       0       1       0       1       1       2   \n",
       "\n",
       "   d_1901  d_1902  d_1903  d_1904  d_1905  d_1906  d_1907  d_1908  d_1909  \\\n",
       "0       0       0       1       1       3       0       1       1       1   \n",
       "1       0       0       0       0       0       0       0       0       1   \n",
       "2       0       1       2       2       1       2       1       1       1   \n",
       "3       0       3       0       1       0       5       4       1       0   \n",
       "4       0       1       1       2       1       1       0       1       1   \n",
       "\n",
       "   d_1910  d_1911  d_1912  d_1913  \n",
       "0       3       0       1       1  \n",
       "1       0       0       0       0  \n",
       "2       0       1       1       1  \n",
       "3       1       3       7       2  \n",
       "4       2       2       2       4  \n",
       "\n",
       "[5 rows x 1919 columns]"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "past_sales=df_train.set_index('id')[d_cols].T.merge(df_cld.set_index('d')['date'],\\\n",
    "            left_index=True, right_index=True,validate='1:1').set_index('date')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The lowest sale date was: 2012-12-25 with 11 sales\n",
      "The highest sale date was: 2016-03-06 with 57218 sales\n"
     ]
    }
   ],
   "source": [
    "print('The lowest sale date was:', past_sales.sum(axis=1).sort_values().index[0],\n",
    "     'with', past_sales.sum(axis=1).sort_values().values[0], 'sales')\n",
    "print('The highest sale date was:', past_sales.sum(axis=1).sort_values(ascending=False).index[0],\n",
    "     'with', past_sales.sum(axis=1).sort_values(ascending=False).values[0], 'sales')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# MODELING"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_sub=pd.read_csv(path_sbmssion)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>F1</th>\n",
       "      <th>F2</th>\n",
       "      <th>F3</th>\n",
       "      <th>F4</th>\n",
       "      <th>F5</th>\n",
       "      <th>F6</th>\n",
       "      <th>F7</th>\n",
       "      <th>F8</th>\n",
       "      <th>F9</th>\n",
       "      <th>F10</th>\n",
       "      <th>F11</th>\n",
       "      <th>F12</th>\n",
       "      <th>F13</th>\n",
       "      <th>F14</th>\n",
       "      <th>F15</th>\n",
       "      <th>F16</th>\n",
       "      <th>F17</th>\n",
       "      <th>F18</th>\n",
       "      <th>F19</th>\n",
       "      <th>F20</th>\n",
       "      <th>F21</th>\n",
       "      <th>F22</th>\n",
       "      <th>F23</th>\n",
       "      <th>F24</th>\n",
       "      <th>F25</th>\n",
       "      <th>F26</th>\n",
       "      <th>F27</th>\n",
       "      <th>F28</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HOBBIES_1_001_CA_1_validation</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "      <td>0.977778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HOBBIES_1_002_CA_1_validation</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "      <td>0.188889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HOBBIES_1_003_CA_1_validation</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "      <td>0.455556</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              id        F1        F2        F3        F4  \\\n",
       "0  HOBBIES_1_001_CA_1_validation  0.977778  0.977778  0.977778  0.977778   \n",
       "1  HOBBIES_1_002_CA_1_validation  0.188889  0.188889  0.188889  0.188889   \n",
       "2  HOBBIES_1_003_CA_1_validation  0.455556  0.455556  0.455556  0.455556   \n",
       "\n",
       "         F5        F6        F7        F8        F9       F10       F11  \\\n",
       "0  0.977778  0.977778  0.977778  0.977778  0.977778  0.977778  0.977778   \n",
       "1  0.188889  0.188889  0.188889  0.188889  0.188889  0.188889  0.188889   \n",
       "2  0.455556  0.455556  0.455556  0.455556  0.455556  0.455556  0.455556   \n",
       "\n",
       "        F12       F13       F14       F15       F16       F17       F18  \\\n",
       "0  0.977778  0.977778  0.977778  0.977778  0.977778  0.977778  0.977778   \n",
       "1  0.188889  0.188889  0.188889  0.188889  0.188889  0.188889  0.188889   \n",
       "2  0.455556  0.455556  0.455556  0.455556  0.455556  0.455556  0.455556   \n",
       "\n",
       "        F19       F20       F21       F22       F23       F24       F25  \\\n",
       "0  0.977778  0.977778  0.977778  0.977778  0.977778  0.977778  0.977778   \n",
       "1  0.188889  0.188889  0.188889  0.188889  0.188889  0.188889  0.188889   \n",
       "2  0.455556  0.455556  0.455556  0.455556  0.455556  0.455556  0.455556   \n",
       "\n",
       "        F26       F27       F28  \n",
       "0  0.977778  0.977778  0.977778  \n",
       "1  0.188889  0.188889  0.188889  \n",
       "2  0.455556  0.455556  0.455556  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 1. mean of the past 90 days\n",
    "\n",
    "df_sub=pd.read_csv(path_sbmssion)\n",
    "thirdy_day_avg_map_2=df_train.set_index('id')[d_cols[-90:]].mean(axis=1).to_dict()\n",
    "fcols = [f for f in df_sub.columns if 'F' in f]\n",
    "\n",
    "for f in fcols[:]:\n",
    "    df_sub[f]=df_sub['id'][:].map(thirdy_day_avg_map_2).fillna(0)\n",
    "    \n",
    "#df_sub.set_index('id', inplace=True)\n",
    "df_sub.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df_sub.to_csv('submission_1.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "train = df_train.set_index('id')[d_cols]\n",
    "train.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df_train.set_index('id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df_sub"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## lgbm Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "import dask.dataframe as dd\n",
    "\n",
    "import lightgbm as lgb\n",
    "import xgboost as xgb\n",
    "from sklearn import preprocessing, metrics\n",
    "from sklearn.model_selection import StratifiedKFold, KFold, RepeatedKFold,GroupKFold, GridSearchCV, train_test_split, TimeSeriesSplit\n",
    "import gc\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_dataset = df_train[d_cols[-100:-30]]\n",
    "val_dataset = df_train[d_cols[-30:]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "def reduce_mem_usage(df, verbose=True):\n",
    "    numerics = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\n",
    "    start_mem = df.memory_usage().sum() / 1024**2    \n",
    "    for col in df.columns:\n",
    "        col_type = df[col].dtypes\n",
    "        if col_type in numerics:\n",
    "            c_min = df[col].min()\n",
    "            c_max = df[col].max()\n",
    "            if str(col_type)[:3] == 'int':\n",
    "                if c_min > np.iinfo(np.int8).min and c_max < np.iinfo(np.int8).max:\n",
    "                    df[col] = df[col].astype(np.int8)\n",
    "                elif c_min > np.iinfo(np.int16).min and c_max < np.iinfo(np.int16).max:\n",
    "                    df[col] = df[col].astype(np.int16)\n",
    "                elif c_min > np.iinfo(np.int32).min and c_max < np.iinfo(np.int32).max:\n",
    "                    df[col] = df[col].astype(np.int32)\n",
    "                elif c_min > np.iinfo(np.int64).min and c_max < np.iinfo(np.int64).max:\n",
    "                    df[col] = df[col].astype(np.int64)  \n",
    "            else:\n",
    "                if c_min > np.finfo(np.float16).min and c_max < np.finfo(np.float16).max:\n",
    "                    df[col] = df[col].astype(np.float16)\n",
    "                elif c_min > np.finfo(np.float32).min and c_max < np.finfo(np.float32).max:\n",
    "                    df[col] = df[col].astype(np.float32)\n",
    "                else:\n",
    "                    df[col] = df[col].astype(np.float64)    \n",
    "    end_mem = df.memory_usage().sum() / 1024**2\n",
    "    if verbose: print('Mem. usage decreased to {:5.2f} Mb ({:.1f}% reduction)'.format(end_mem, 100 * (start_mem - end_mem) / start_mem))\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "def melt_and_merge(calendar, sell_prices, sales_train_validation, submission, nrows = 55000000, merge = False):\n",
    "    \n",
    "    # melt sales data, get it ready for training\n",
    "    sales_train_validation = pd.melt(sales_train_validation, id_vars = ['id', 'item_id', 'dept_id',\\\n",
    "                            'cat_id', 'store_id', 'state_id'], var_name = 'day', value_name = 'demand')\n",
    "    print('Melted sales train validation has {} rows and {} columns'.format(sales_train_validation.shape[0]\\\n",
    "                                                                            , sales_train_validation.shape[1]))\n",
    "    #sales_train_validation = reduce_mem_usage(sales_train_validation)\n",
    "    \n",
    "    # seperate test dataframes\n",
    "    test1_rows = [row for row in submission['id'] if 'validation' in row]\n",
    "    test2_rows = [row for row in submission['id'] if 'evaluation' in row]\n",
    "    test1 = submission[submission['id'].isin(test1_rows)]\n",
    "    test2 = submission[submission['id'].isin(test2_rows)]\n",
    "    \n",
    "    # change column names\n",
    "    test1.columns = ['id', 'd_1914', 'd_1915', 'd_1916', 'd_1917', 'd_1918', 'd_1919', 'd_1920', 'd_1921', 'd_1922', 'd_1923', 'd_1924', 'd_1925', 'd_1926', 'd_1927', 'd_1928', 'd_1929', 'd_1930', 'd_1931', \n",
    "                      'd_1932', 'd_1933', 'd_1934', 'd_1935', 'd_1936', 'd_1937', 'd_1938', 'd_1939', 'd_1940', 'd_1941']\n",
    "    test2.columns = ['id', 'd_1942', 'd_1943', 'd_1944', 'd_1945', 'd_1946', 'd_1947', 'd_1948', 'd_1949', 'd_1950', 'd_1951', 'd_1952', 'd_1953', 'd_1954', 'd_1955', 'd_1956', 'd_1957', 'd_1958', 'd_1959', \n",
    "                      'd_1960', 'd_1961', 'd_1962', 'd_1963', 'd_1964', 'd_1965', 'd_1966', 'd_1967', 'd_1968', 'd_1969']\n",
    "    \n",
    "    # get product table\n",
    "    product = sales_train_validation[['id', 'item_id', 'dept_id', 'cat_id', 'store_id', 'state_id']].drop_duplicates()\n",
    "    \n",
    "    # merge with product table\n",
    "    test1 = test1.merge(product, how = 'left', on = 'id')\n",
    "    test2 = test2.merge(product, how = 'left', on = 'id')\n",
    "    \n",
    "    # \n",
    "    test1 = pd.melt(test1, id_vars = ['id', 'item_id', 'dept_id', 'cat_id', 'store_id', 'state_id'], var_name = 'day', value_name = 'demand')\n",
    "    test2 = pd.melt(test2, id_vars = ['id', 'item_id', 'dept_id', 'cat_id', 'store_id', 'state_id'], var_name = 'day', value_name = 'demand')\n",
    "    \n",
    "    sales_train_validation['part'] = 'train'\n",
    "    test1['part'] = 'test1'\n",
    "    test2['part'] = 'test2'\n",
    "    \n",
    "    data = pd.concat([sales_train_validation, test1, test2], axis = 0)\n",
    "    \n",
    "    del sales_train_validation, test1, test2\n",
    "    \n",
    "    # get only a sample for fst training\n",
    "    data = data.loc[nrows:]\n",
    "    \n",
    "    # drop some calendar features\n",
    "    calendar.drop(['weekday', 'wday', 'month', 'year'], inplace = True, axis = 1)\n",
    "    \n",
    "    # delete test2 for now\n",
    "    data = data[data['part'] != 'test2']\n",
    "    \n",
    "    if merge:\n",
    "        # notebook crash with the entire dataset (maybee use tensorflow, dask, pyspark xD)\n",
    "        data = pd.merge(data, calendar, how = 'left', left_on = ['day'], right_on = ['d'])\n",
    "        data.drop(['d', 'day'], inplace = True, axis = 1)\n",
    "        # get the sell price data (this feature should be very important)\n",
    "        data = data.merge(sell_prices, on = ['store_id', 'item_id', 'wm_yr_wk'], how = 'left')\n",
    "        print('Our final dataset to train has {} rows and {} columns'.format(data.shape[0], data.shape[1]))\n",
    "    else: \n",
    "        pass\n",
    "    \n",
    "    gc.collect()\n",
    "    \n",
    "    return data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Melted sales train validation has 58327370 rows and 8 columns\n",
      "Our final dataset to train has 31681090 rows and 18 columns\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "7"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = melt_and_merge(df_cld, df_price, df_train, df_sub, nrows = 27500000, merge = True)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 31681090 entries, 0 to 31681089\n",
      "Data columns (total 18 columns):\n",
      "id              object\n",
      "item_id         object\n",
      "dept_id         object\n",
      "cat_id          object\n",
      "store_id        object\n",
      "state_id        object\n",
      "demand          int64\n",
      "part            object\n",
      "date            object\n",
      "wm_yr_wk        int64\n",
      "event_name_1    object\n",
      "event_type_1    object\n",
      "event_name_2    object\n",
      "event_type_2    object\n",
      "snap_CA         int64\n",
      "snap_TX         int64\n",
      "snap_WI         int64\n",
      "sell_price      float64\n",
      "dtypes: float64(1), int64(5), object(12)\n",
      "memory usage: 4.5+ GB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>item_id</th>\n",
       "      <th>dept_id</th>\n",
       "      <th>cat_id</th>\n",
       "      <th>store_id</th>\n",
       "      <th>state_id</th>\n",
       "      <th>demand</th>\n",
       "      <th>part</th>\n",
       "      <th>date</th>\n",
       "      <th>wm_yr_wk</th>\n",
       "      <th>event_name_1</th>\n",
       "      <th>event_type_1</th>\n",
       "      <th>event_name_2</th>\n",
       "      <th>event_type_2</th>\n",
       "      <th>snap_CA</th>\n",
       "      <th>snap_TX</th>\n",
       "      <th>snap_WI</th>\n",
       "      <th>sell_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HOUSEHOLD_1_514_WI_3_validation</td>\n",
       "      <td>HOUSEHOLD_1_514</td>\n",
       "      <td>HOUSEHOLD_1</td>\n",
       "      <td>HOUSEHOLD</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>16</td>\n",
       "      <td>train</td>\n",
       "      <td>2013-07-18</td>\n",
       "      <td>11325</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HOUSEHOLD_1_515_WI_3_validation</td>\n",
       "      <td>HOUSEHOLD_1_515</td>\n",
       "      <td>HOUSEHOLD_1</td>\n",
       "      <td>HOUSEHOLD</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>1</td>\n",
       "      <td>train</td>\n",
       "      <td>2013-07-18</td>\n",
       "      <td>11325</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HOUSEHOLD_1_516_WI_3_validation</td>\n",
       "      <td>HOUSEHOLD_1_516</td>\n",
       "      <td>HOUSEHOLD_1</td>\n",
       "      <td>HOUSEHOLD</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>1</td>\n",
       "      <td>train</td>\n",
       "      <td>2013-07-18</td>\n",
       "      <td>11325</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HOUSEHOLD_1_517_WI_3_validation</td>\n",
       "      <td>HOUSEHOLD_1_517</td>\n",
       "      <td>HOUSEHOLD_1</td>\n",
       "      <td>HOUSEHOLD</td>\n",
       "      <td>WI_3</td>\n",
       "      <td>WI</td>\n",
       "      <td>1</td>\n",
       "      <td>train</td>\n",
       "      <td>2013-07-18</td>\n",
       "      <td>11325</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.98</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                id          item_id      dept_id     cat_id  \\\n",
       "0  HOUSEHOLD_1_514_WI_3_validation  HOUSEHOLD_1_514  HOUSEHOLD_1  HOUSEHOLD   \n",
       "1  HOUSEHOLD_1_515_WI_3_validation  HOUSEHOLD_1_515  HOUSEHOLD_1  HOUSEHOLD   \n",
       "2  HOUSEHOLD_1_516_WI_3_validation  HOUSEHOLD_1_516  HOUSEHOLD_1  HOUSEHOLD   \n",
       "3  HOUSEHOLD_1_517_WI_3_validation  HOUSEHOLD_1_517  HOUSEHOLD_1  HOUSEHOLD   \n",
       "\n",
       "  store_id state_id  demand   part        date  wm_yr_wk event_name_1  \\\n",
       "0     WI_3       WI      16  train  2013-07-18     11325          NaN   \n",
       "1     WI_3       WI       1  train  2013-07-18     11325          NaN   \n",
       "2     WI_3       WI       1  train  2013-07-18     11325          NaN   \n",
       "3     WI_3       WI       1  train  2013-07-18     11325          NaN   \n",
       "\n",
       "  event_type_1 event_name_2 event_type_2  snap_CA  snap_TX  snap_WI  \\\n",
       "0          NaN          NaN          NaN        0        0        0   \n",
       "1          NaN          NaN          NaN        0        0        0   \n",
       "2          NaN          NaN          NaN        0        0        0   \n",
       "3          NaN          NaN          NaN        0        0        0   \n",
       "\n",
       "   sell_price  \n",
       "0        3.50  \n",
       "1        2.47  \n",
       "2        1.98  \n",
       "3        0.98  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "def transform(data):\n",
    "    \n",
    "    nan_features = ['event_name_1', 'event_type_1', 'event_name_2', 'event_type_2']\n",
    "    for feature in nan_features:\n",
    "        data[feature].fillna('unknown', inplace = True)\n",
    "    \n",
    "    encoder = preprocessing.LabelEncoder()\n",
    "    data['id_encode'] = encoder.fit_transform(data['id'])\n",
    "    \n",
    "    cat = ['item_id', 'dept_id', 'cat_id', 'store_id', 'state_id', 'event_name_1', 'event_type_1', 'event_name_2', 'event_type_2']\n",
    "    for feature in cat:\n",
    "        encoder = preprocessing.LabelEncoder()\n",
    "        data[feature] = encoder.fit_transform(data[feature])\n",
    "    \n",
    "    return data\n",
    "\n",
    "data = transform(data)\n",
    "gc.collect()\n",
    "def simple_fe(data):\n",
    "    \n",
    "    # demand features\n",
    "    data['lag_t28'] = data.groupby(['id'])['demand'].transform(lambda x: x.shift(28))\n",
    "    data['lag_t29'] = data.groupby(['id'])['demand'].transform(lambda x: x.shift(29))\n",
    "    data['lag_t30'] = data.groupby(['id'])['demand'].transform(lambda x: x.shift(30))\n",
    "    data['rolling_mean_t7'] = data.groupby(['id'])['demand'].transform(lambda x: x.shift(28).rolling(7).mean())\n",
    "    data['rolling_std_t7'] = data.groupby(['id'])['demand'].transform(lambda x: x.shift(28).rolling(7).std())\n",
    "    data['rolling_mean_t30'] = data.groupby(['id'])['demand'].transform(lambda x: x.shift(28).rolling(30).mean())\n",
    "    data['rolling_mean_t90'] = data.groupby(['id'])['demand'].transform(lambda x: x.shift(28).rolling(90).mean())\n",
    "    data['rolling_mean_t180'] = data.groupby(['id'])['demand'].transform(lambda x: x.shift(28).rolling(180).mean())\n",
    "    data['rolling_std_t30'] = data.groupby(['id'])['demand'].transform(lambda x: x.shift(28).rolling(30).std())\n",
    "    \n",
    "    # price features\n",
    "    data['lag_price_t1'] = data.groupby(['id'])['sell_price'].transform(lambda x: x.shift(1))\n",
    "    data['price_change_t1'] = (data['lag_price_t1'] - data['sell_price']) / (data['lag_price_t1'])\n",
    "    data['rolling_price_max_t365'] = data.groupby(['id'])['sell_price'].transform(lambda x: x.shift(1).rolling(365).max())\n",
    "    data['price_change_t365'] = (data['rolling_price_max_t365'] - data['sell_price']) / (data['rolling_price_max_t365'])\n",
    "    data['rolling_price_std_t7'] = data.groupby(['id'])['sell_price'].transform(lambda x: x.rolling(7).std())\n",
    "    data['rolling_price_std_t30'] = data.groupby(['id'])['sell_price'].transform(lambda x: x.rolling(30).std())\n",
    "    data.drop(['rolling_price_max_t365', 'lag_price_t1'], inplace = True, axis = 1)\n",
    "    \n",
    "    # time features\n",
    "    data['date'] = pd.to_datetime(data['date'])\n",
    "    data['year'] = data['date'].dt.year\n",
    "    data['month'] = data['date'].dt.month\n",
    "    data['week'] = data['date'].dt.week\n",
    "    data['day'] = data['date'].dt.day\n",
    "    data['dayofweek'] = data['date'].dt.dayofweek\n",
    "    \n",
    "    return data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 31681090 entries, 0 to 31681089\n",
      "Data columns (total 37 columns):\n",
      "id                       object\n",
      "item_id                  int64\n",
      "dept_id                  int64\n",
      "cat_id                   int64\n",
      "store_id                 int64\n",
      "state_id                 int64\n",
      "demand                   int64\n",
      "part                     object\n",
      "date                     datetime64[ns]\n",
      "wm_yr_wk                 int64\n",
      "event_name_1             int64\n",
      "event_type_1             int64\n",
      "event_name_2             int64\n",
      "event_type_2             int64\n",
      "snap_CA                  int64\n",
      "snap_TX                  int64\n",
      "snap_WI                  int64\n",
      "sell_price               float64\n",
      "id_encode                int64\n",
      "lag_t28                  float64\n",
      "lag_t29                  float64\n",
      "lag_t30                  float64\n",
      "rolling_mean_t7          float64\n",
      "rolling_std_t7           float64\n",
      "rolling_mean_t30         float64\n",
      "rolling_mean_t90         float64\n",
      "rolling_mean_t180        float64\n",
      "rolling_std_t30          float64\n",
      "price_change_t1          float64\n",
      "price_change_t365        float64\n",
      "rolling_price_std_t7     float64\n",
      "rolling_price_std_t30    float64\n",
      "year                     int64\n",
      "month                    int64\n",
      "week                     int64\n",
      "day                      int64\n",
      "dayofweek                int64\n",
      "dtypes: datetime64[ns](1), float64(14), int64(20), object(2)\n",
      "memory usage: 9.0+ GB\n"
     ]
    }
   ],
   "source": [
    "data = simple_fe(data)\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mem. usage decreased to 2568.14 Mb (72.0% reduction)\n"
     ]
    }
   ],
   "source": [
    "data=reduce_mem_usage(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 31681090 entries, 0 to 31681089\n",
      "Data columns (total 37 columns):\n",
      "id                       object\n",
      "item_id                  int16\n",
      "dept_id                  int8\n",
      "cat_id                   int8\n",
      "store_id                 int8\n",
      "state_id                 int8\n",
      "demand                   int16\n",
      "part                     object\n",
      "date                     datetime64[ns]\n",
      "wm_yr_wk                 int16\n",
      "event_name_1             int8\n",
      "event_type_1             int8\n",
      "event_name_2             int8\n",
      "event_type_2             int8\n",
      "snap_CA                  int8\n",
      "snap_TX                  int8\n",
      "snap_WI                  int8\n",
      "sell_price               float16\n",
      "id_encode                int16\n",
      "lag_t28                  float16\n",
      "lag_t29                  float16\n",
      "lag_t30                  float16\n",
      "rolling_mean_t7          float16\n",
      "rolling_std_t7           float16\n",
      "rolling_mean_t30         float16\n",
      "rolling_mean_t90         float16\n",
      "rolling_mean_t180        float16\n",
      "rolling_std_t30          float16\n",
      "price_change_t1          float16\n",
      "price_change_t365        float16\n",
      "rolling_price_std_t7     float16\n",
      "rolling_price_std_t30    float16\n",
      "year                     int16\n",
      "month                    int8\n",
      "week                     int8\n",
      "day                      int8\n",
      "dayofweek                int8\n",
      "dtypes: datetime64[ns](1), float16(14), int16(5), int8(15), object(2)\n",
      "memory usage: 2.5+ GB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "del df_cld, df_price, df_train, df_sub"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = data[data['date'] <= '2016-04-24']\n",
    "y = x.sort_values('date')['demand']\n",
    "test = data[(data['date'] > '2016-04-24')]\n",
    "x = x.sort_values('date')\n",
    "test = test.sort_values('date')\n",
    "\n",
    "del data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "n_fold = 5 #3 for timely purpose of the kernel\n",
    "folds = TimeSeriesSplit(n_splits=n_fold)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "params = {'num_leaves': 555,         \n",
    "        'min_child_weight': 0.034,\n",
    "          'feature_fraction': 0.379,\n",
    "          'bagging_fraction': 0.418,\n",
    "          'min_data_in_leaf': 106,\n",
    "          'objective': 'regression',\n",
    "          'max_depth': -1,\n",
    "          'learning_rate': 0.005,\n",
    "          \"boosting_type\": \"gbdt\",\n",
    "          \"bagging_seed\": 11,\n",
    "          \"metric\": 'rmse',\n",
    "          \"verbosity\": -1,\n",
    "          'reg_alpha': 0.3899,\n",
    "          'reg_lambda': 0.648,\n",
    "          'random_state': 222,\n",
    "         }"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fold: 1\n",
      "Training until validation scores don't improve for 50 rounds.\n",
      "[100]\ttraining's rmse: 3.51177\tvalid_1's rmse: 3.04754\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-41-4d4981f43313>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     14\u001b[0m     \u001b[0mdtrain\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlgb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0mdvalid\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlgb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_valid\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my_valid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m     \u001b[0mclf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlgb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2500\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalid_sets\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mdtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdvalid\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mearly_stopping_rounds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose_eval\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m     \u001b[0mfeature_importances\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34mf'fold_{fold_n + 1}'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeature_importance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m     \u001b[0my_pred_valid\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_valid\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mnum_iteration\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mclf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_iteration\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/lightgbm/engine.py\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(params, train_set, num_boost_round, valid_sets, valid_names, fobj, feval, init_model, feature_name, categorical_feature, early_stopping_rounds, evals_result, verbose_eval, learning_rates, keep_training_booster, callbacks)\u001b[0m\n\u001b[1;32m    216\u001b[0m                                     evaluation_result_list=None))\n\u001b[1;32m    217\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 218\u001b[0;31m         \u001b[0mbooster\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfobj\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    219\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    220\u001b[0m         \u001b[0mevaluation_result_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/lightgbm/basic.py\u001b[0m in \u001b[0;36mupdate\u001b[0;34m(self, train_set, fobj)\u001b[0m\n\u001b[1;32m   1800\u001b[0m             _safe_call(_LIB.LGBM_BoosterUpdateOneIter(\n\u001b[1;32m   1801\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1802\u001b[0;31m                 ctypes.byref(is_finished)))\n\u001b[0m\u001b[1;32m   1803\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__is_predicted_cur_iter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;32mFalse\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0m_\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange_\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__num_dataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1804\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mis_finished\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "columns = ['item_id', 'dept_id', 'cat_id', 'store_id', 'state_id', 'year', 'month', 'week', 'day', 'dayofweek', 'event_name_1', 'event_type_1', 'event_name_2', 'event_type_2', \n",
    "            'snap_CA', 'snap_TX', 'snap_WI', 'sell_price', 'lag_t28', 'lag_t29', 'lag_t30', 'rolling_mean_t7', 'rolling_std_t7', 'rolling_mean_t30', 'rolling_mean_t90', \n",
    "            'rolling_mean_t180', 'rolling_std_t30', 'price_change_t1', 'price_change_t365', 'rolling_price_std_t7', 'rolling_price_std_t30']\n",
    "splits = folds.split(x, y)\n",
    "y_preds = np.zeros(test.shape[0])\n",
    "y_oof = np.zeros(x.shape[0])\n",
    "feature_importances = pd.DataFrame()\n",
    "feature_importances['feature'] = columns\n",
    "mean_score = []\n",
    "for fold_n, (train_index, valid_index) in enumerate(splits):\n",
    "    print('Fold:',fold_n+1)\n",
    "    X_train, X_valid = x[columns].iloc[train_index], x[columns].iloc[valid_index]\n",
    "    y_train, y_valid = y.iloc[train_index], y.iloc[valid_index]\n",
    "    dtrain = lgb.Dataset(X_train, label=y_train)\n",
    "    dvalid = lgb.Dataset(X_valid, label=y_valid)\n",
    "    clf = lgb.train(params, dtrain, 2500, valid_sets = [dtrain, dvalid],early_stopping_rounds = 50, verbose_eval=100)\n",
    "    feature_importances[f'fold_{fold_n + 1}'] = clf.feature_importance()\n",
    "    y_pred_valid = clf.predict(X_valid,num_iteration=clf.best_iteration)\n",
    "    y_oof[valid_index] = y_pred_valid\n",
    "    val_score = np.sqrt(metrics.mean_squared_error(y_pred_valid, y_valid))\n",
    "    print(f'val rmse score is {val_score}')\n",
    "    mean_score.append(val_score)\n",
    "    y_preds += clf.predict(test[columns], num_iteration=clf.best_iteration)/n_fold\n",
    "    del X_train, X_valid, y_train, y_valid\n",
    "    gc.collect()\n",
    "print('mean rmse score over folds is',np.mean(mean_score))\n",
    "test['demand'] = y_preds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def predict(test, submission):\n",
    "    predictions = test[['id', 'date', 'demand']]\n",
    "    predictions = pd.pivot(predictions, index = 'id', columns = 'date', values = 'demand').reset_index()\n",
    "    predictions.columns = ['id'] + ['F' + str(i + 1) for i in range(28)]\n",
    "    evaluation_rows = [row for row in submission['id'] if 'evaluation' in row] \n",
    "    evaluation = submission[submission['id'].isin(evaluation_rows)]\n",
    "    validation = submission[['id']].merge(predictions, on = 'id')\n",
    "    final = pd.concat([validation, evaluation])\n",
    "    #final.to_csv('submission.csv', index = False)\n",
    "    return final\n",
    "\n",
    "subs = predict(test, submission)\n",
    "subs.to_csv('submission_3.csv',index = False)\n",
    "subs.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "feature_importances['average'] = feature_importances[[f'fold_{fold_n + 1}' for fold_n in range(folds.n_splits)]].mean(axis=1)\n",
    "feature_importances.to_csv('feature_importances.csv')\n",
    "\n",
    "plt.figure(figsize=(16, 12))\n",
    "sns.barplot(data=feature_importances.sort_values(by='average', ascending=False).head(20), x='average', y='feature');\n",
    "plt.title('20 TOP feature importance over {} folds average'.format(folds.n_splits));"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
